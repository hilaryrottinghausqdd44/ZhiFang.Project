//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace ReportFormServiceDemo.ReportFormServiceInterFace {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportFormServiceInterFaceSoap", Namespace="ZhiFang.ReportFormQueryPrint")]
    public partial class ReportFormServiceInterFace : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ZhongRiYiYuanZiZhuDaDanReportFormServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFormPDFByPatNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFormPDFByFormNo_FTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLisReportBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFormPDFByFields_Base64StringOperationCompleted;
        
        private System.Threading.SendOrPostCallback NeiJiangGetReportFormPDFListByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NeiJiangGetReportFormPDFListBitsByDSXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback NeiJiangUpdateReportPrintTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback TianJinGetReportFormPDFByFormNoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportFormServiceInterFace() {
            this.Url = global::ReportFormServiceDemo.Properties.Settings.Default.ReportFormServiceDemo_ReportFormServiceInterFace_ReportFormServiceInterFace;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ZhongRiYiYuanZiZhuDaDanReportFormServiceCompletedEventHandler ZhongRiYiYuanZiZhuDaDanReportFormServiceCompleted;
        
        /// <remarks/>
        public event GetReportFormPDFByPatNoCompletedEventHandler GetReportFormPDFByPatNoCompleted;
        
        /// <remarks/>
        public event GetReportFormPDFByFormNo_FTPCompletedEventHandler GetReportFormPDFByFormNo_FTPCompleted;
        
        /// <remarks/>
        public event GetLisReportBase64CompletedEventHandler GetLisReportBase64Completed;
        
        /// <remarks/>
        public event GetReportFormPDFByFields_Base64StringCompletedEventHandler GetReportFormPDFByFields_Base64StringCompleted;
        
        /// <remarks/>
        public event NeiJiangGetReportFormPDFListByUserIdCompletedEventHandler NeiJiangGetReportFormPDFListByUserIdCompleted;
        
        /// <remarks/>
        public event NeiJiangGetReportFormPDFListBitsByDSXMLCompletedEventHandler NeiJiangGetReportFormPDFListBitsByDSXMLCompleted;
        
        /// <remarks/>
        public event NeiJiangUpdateReportPrintTimesCompletedEventHandler NeiJiangUpdateReportPrintTimesCompleted;
        
        /// <remarks/>
        public event TianJinGetReportFormPDFByFormNoCompletedEventHandler TianJinGetReportFormPDFByFormNoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/ZhongRiYiYuanZiZhuDaDanReportFormService", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ZhongRiYiYuanZiZhuDaDanReportFormService(string CardNo, out string[] ReportFormPdfPath, out string ErrorInfo) {
            object[] results = this.Invoke("ZhongRiYiYuanZiZhuDaDanReportFormService", new object[] {
                        CardNo});
            ReportFormPdfPath = ((string[])(results[1]));
            ErrorInfo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ZhongRiYiYuanZiZhuDaDanReportFormServiceAsync(string CardNo) {
            this.ZhongRiYiYuanZiZhuDaDanReportFormServiceAsync(CardNo, null);
        }
        
        /// <remarks/>
        public void ZhongRiYiYuanZiZhuDaDanReportFormServiceAsync(string CardNo, object userState) {
            if ((this.ZhongRiYiYuanZiZhuDaDanReportFormServiceOperationCompleted == null)) {
                this.ZhongRiYiYuanZiZhuDaDanReportFormServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZhongRiYiYuanZiZhuDaDanReportFormServiceOperationCompleted);
            }
            this.InvokeAsync("ZhongRiYiYuanZiZhuDaDanReportFormService", new object[] {
                        CardNo}, this.ZhongRiYiYuanZiZhuDaDanReportFormServiceOperationCompleted, userState);
        }
        
        private void OnZhongRiYiYuanZiZhuDaDanReportFormServiceOperationCompleted(object arg) {
            if ((this.ZhongRiYiYuanZiZhuDaDanReportFormServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ZhongRiYiYuanZiZhuDaDanReportFormServiceCompleted(this, new ZhongRiYiYuanZiZhuDaDanReportFormServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/GetReportFormPDFByPatNo", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetReportFormPDFByPatNo(string PatNo, int RangeDay, int flag, out string[] ReportFormPdfPath, out string ErrorInfo) {
            object[] results = this.Invoke("GetReportFormPDFByPatNo", new object[] {
                        PatNo,
                        RangeDay,
                        flag});
            ReportFormPdfPath = ((string[])(results[1]));
            ErrorInfo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFormPDFByPatNoAsync(string PatNo, int RangeDay, int flag) {
            this.GetReportFormPDFByPatNoAsync(PatNo, RangeDay, flag, null);
        }
        
        /// <remarks/>
        public void GetReportFormPDFByPatNoAsync(string PatNo, int RangeDay, int flag, object userState) {
            if ((this.GetReportFormPDFByPatNoOperationCompleted == null)) {
                this.GetReportFormPDFByPatNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFormPDFByPatNoOperationCompleted);
            }
            this.InvokeAsync("GetReportFormPDFByPatNo", new object[] {
                        PatNo,
                        RangeDay,
                        flag}, this.GetReportFormPDFByPatNoOperationCompleted, userState);
        }
        
        private void OnGetReportFormPDFByPatNoOperationCompleted(object arg) {
            if ((this.GetReportFormPDFByPatNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFormPDFByPatNoCompleted(this, new GetReportFormPDFByPatNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/GetReportFormPDFByFormNo_FTP", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetReportFormPDFByFormNo_FTP(string FormNo, string FormNoFormat, string SplitChar, int RangeDay, int flag, out string[] ReportFormPdfPath, out string ErrorInfo) {
            object[] results = this.Invoke("GetReportFormPDFByFormNo_FTP", new object[] {
                        FormNo,
                        FormNoFormat,
                        SplitChar,
                        RangeDay,
                        flag});
            ReportFormPdfPath = ((string[])(results[1]));
            ErrorInfo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFormPDFByFormNo_FTPAsync(string FormNo, string FormNoFormat, string SplitChar, int RangeDay, int flag) {
            this.GetReportFormPDFByFormNo_FTPAsync(FormNo, FormNoFormat, SplitChar, RangeDay, flag, null);
        }
        
        /// <remarks/>
        public void GetReportFormPDFByFormNo_FTPAsync(string FormNo, string FormNoFormat, string SplitChar, int RangeDay, int flag, object userState) {
            if ((this.GetReportFormPDFByFormNo_FTPOperationCompleted == null)) {
                this.GetReportFormPDFByFormNo_FTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFormPDFByFormNo_FTPOperationCompleted);
            }
            this.InvokeAsync("GetReportFormPDFByFormNo_FTP", new object[] {
                        FormNo,
                        FormNoFormat,
                        SplitChar,
                        RangeDay,
                        flag}, this.GetReportFormPDFByFormNo_FTPOperationCompleted, userState);
        }
        
        private void OnGetReportFormPDFByFormNo_FTPOperationCompleted(object arg) {
            if ((this.GetReportFormPDFByFormNo_FTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFormPDFByFormNo_FTPCompleted(this, new GetReportFormPDFByFormNo_FTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/GetLisReportBase64", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLisReportBase64(string batchXMLRequest) {
            object[] results = this.Invoke("GetLisReportBase64", new object[] {
                        batchXMLRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLisReportBase64Async(string batchXMLRequest) {
            this.GetLisReportBase64Async(batchXMLRequest, null);
        }
        
        /// <remarks/>
        public void GetLisReportBase64Async(string batchXMLRequest, object userState) {
            if ((this.GetLisReportBase64OperationCompleted == null)) {
                this.GetLisReportBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisReportBase64OperationCompleted);
            }
            this.InvokeAsync("GetLisReportBase64", new object[] {
                        batchXMLRequest}, this.GetLisReportBase64OperationCompleted, userState);
        }
        
        private void OnGetLisReportBase64OperationCompleted(object arg) {
            if ((this.GetLisReportBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLisReportBase64Completed(this, new GetLisReportBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/GetReportFormPDFByFields_Base64String", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetReportFormPDFByFields_Base64String(string[] fields, string[] values, string[] order, int RangeDay, int IsPrintTimes, int flag, out string[] ReportFormPdfPathBtis, out string ErrorInfo) {
            object[] results = this.Invoke("GetReportFormPDFByFields_Base64String", new object[] {
                        fields,
                        values,
                        order,
                        RangeDay,
                        IsPrintTimes,
                        flag});
            ReportFormPdfPathBtis = ((string[])(results[1]));
            ErrorInfo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFormPDFByFields_Base64StringAsync(string[] fields, string[] values, string[] order, int RangeDay, int IsPrintTimes, int flag) {
            this.GetReportFormPDFByFields_Base64StringAsync(fields, values, order, RangeDay, IsPrintTimes, flag, null);
        }
        
        /// <remarks/>
        public void GetReportFormPDFByFields_Base64StringAsync(string[] fields, string[] values, string[] order, int RangeDay, int IsPrintTimes, int flag, object userState) {
            if ((this.GetReportFormPDFByFields_Base64StringOperationCompleted == null)) {
                this.GetReportFormPDFByFields_Base64StringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFormPDFByFields_Base64StringOperationCompleted);
            }
            this.InvokeAsync("GetReportFormPDFByFields_Base64String", new object[] {
                        fields,
                        values,
                        order,
                        RangeDay,
                        IsPrintTimes,
                        flag}, this.GetReportFormPDFByFields_Base64StringOperationCompleted, userState);
        }
        
        private void OnGetReportFormPDFByFields_Base64StringOperationCompleted(object arg) {
            if ((this.GetReportFormPDFByFields_Base64StringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFormPDFByFields_Base64StringCompleted(this, new GetReportFormPDFByFields_Base64StringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/NeiJiangGetReportFormPDFListByUserId", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NeiJiangGetReportFormPDFListByUserId(string userId, string cardType, string cardNo, string patientId, string type, out string ReportData) {
            object[] results = this.Invoke("NeiJiangGetReportFormPDFListByUserId", new object[] {
                        userId,
                        cardType,
                        cardNo,
                        patientId,
                        type});
            ReportData = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NeiJiangGetReportFormPDFListByUserIdAsync(string userId, string cardType, string cardNo, string patientId, string type) {
            this.NeiJiangGetReportFormPDFListByUserIdAsync(userId, cardType, cardNo, patientId, type, null);
        }
        
        /// <remarks/>
        public void NeiJiangGetReportFormPDFListByUserIdAsync(string userId, string cardType, string cardNo, string patientId, string type, object userState) {
            if ((this.NeiJiangGetReportFormPDFListByUserIdOperationCompleted == null)) {
                this.NeiJiangGetReportFormPDFListByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNeiJiangGetReportFormPDFListByUserIdOperationCompleted);
            }
            this.InvokeAsync("NeiJiangGetReportFormPDFListByUserId", new object[] {
                        userId,
                        cardType,
                        cardNo,
                        patientId,
                        type}, this.NeiJiangGetReportFormPDFListByUserIdOperationCompleted, userState);
        }
        
        private void OnNeiJiangGetReportFormPDFListByUserIdOperationCompleted(object arg) {
            if ((this.NeiJiangGetReportFormPDFListByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NeiJiangGetReportFormPDFListByUserIdCompleted(this, new NeiJiangGetReportFormPDFListByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/NeiJiangGetReportFormPDFListBitsByDSXML", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NeiJiangGetReportFormPDFListBitsByDSXML(string userId, string cardType, string cardNo, string patientId, string reportId, out string ReportData) {
            object[] results = this.Invoke("NeiJiangGetReportFormPDFListBitsByDSXML", new object[] {
                        userId,
                        cardType,
                        cardNo,
                        patientId,
                        reportId});
            ReportData = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NeiJiangGetReportFormPDFListBitsByDSXMLAsync(string userId, string cardType, string cardNo, string patientId, string reportId) {
            this.NeiJiangGetReportFormPDFListBitsByDSXMLAsync(userId, cardType, cardNo, patientId, reportId, null);
        }
        
        /// <remarks/>
        public void NeiJiangGetReportFormPDFListBitsByDSXMLAsync(string userId, string cardType, string cardNo, string patientId, string reportId, object userState) {
            if ((this.NeiJiangGetReportFormPDFListBitsByDSXMLOperationCompleted == null)) {
                this.NeiJiangGetReportFormPDFListBitsByDSXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNeiJiangGetReportFormPDFListBitsByDSXMLOperationCompleted);
            }
            this.InvokeAsync("NeiJiangGetReportFormPDFListBitsByDSXML", new object[] {
                        userId,
                        cardType,
                        cardNo,
                        patientId,
                        reportId}, this.NeiJiangGetReportFormPDFListBitsByDSXMLOperationCompleted, userState);
        }
        
        private void OnNeiJiangGetReportFormPDFListBitsByDSXMLOperationCompleted(object arg) {
            if ((this.NeiJiangGetReportFormPDFListBitsByDSXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NeiJiangGetReportFormPDFListBitsByDSXMLCompleted(this, new NeiJiangGetReportFormPDFListBitsByDSXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/NeiJiangUpdateReportPrintTimes", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NeiJiangUpdateReportPrintTimes(string userId, string cardType, string cardNo, string patientId, string reportId, out string ReportData) {
            object[] results = this.Invoke("NeiJiangUpdateReportPrintTimes", new object[] {
                        userId,
                        cardType,
                        cardNo,
                        patientId,
                        reportId});
            ReportData = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NeiJiangUpdateReportPrintTimesAsync(string userId, string cardType, string cardNo, string patientId, string reportId) {
            this.NeiJiangUpdateReportPrintTimesAsync(userId, cardType, cardNo, patientId, reportId, null);
        }
        
        /// <remarks/>
        public void NeiJiangUpdateReportPrintTimesAsync(string userId, string cardType, string cardNo, string patientId, string reportId, object userState) {
            if ((this.NeiJiangUpdateReportPrintTimesOperationCompleted == null)) {
                this.NeiJiangUpdateReportPrintTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNeiJiangUpdateReportPrintTimesOperationCompleted);
            }
            this.InvokeAsync("NeiJiangUpdateReportPrintTimes", new object[] {
                        userId,
                        cardType,
                        cardNo,
                        patientId,
                        reportId}, this.NeiJiangUpdateReportPrintTimesOperationCompleted, userState);
        }
        
        private void OnNeiJiangUpdateReportPrintTimesOperationCompleted(object arg) {
            if ((this.NeiJiangUpdateReportPrintTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NeiJiangUpdateReportPrintTimesCompleted(this, new NeiJiangUpdateReportPrintTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZhiFang.ReportFormQueryPrint/TianJinGetReportFormPDFByFormNo", RequestNamespace="ZhiFang.ReportFormQueryPrint", ResponseNamespace="ZhiFang.ReportFormQueryPrint", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TianJinGetReportFormPDFByFormNo(string FormNo, string FormNoFormat, string SplitChar, int RangeDay, int flag, out string[] ReportFormPdfPath, out string ErrorInfo) {
            object[] results = this.Invoke("TianJinGetReportFormPDFByFormNo", new object[] {
                        FormNo,
                        FormNoFormat,
                        SplitChar,
                        RangeDay,
                        flag});
            ReportFormPdfPath = ((string[])(results[1]));
            ErrorInfo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TianJinGetReportFormPDFByFormNoAsync(string FormNo, string FormNoFormat, string SplitChar, int RangeDay, int flag) {
            this.TianJinGetReportFormPDFByFormNoAsync(FormNo, FormNoFormat, SplitChar, RangeDay, flag, null);
        }
        
        /// <remarks/>
        public void TianJinGetReportFormPDFByFormNoAsync(string FormNo, string FormNoFormat, string SplitChar, int RangeDay, int flag, object userState) {
            if ((this.TianJinGetReportFormPDFByFormNoOperationCompleted == null)) {
                this.TianJinGetReportFormPDFByFormNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTianJinGetReportFormPDFByFormNoOperationCompleted);
            }
            this.InvokeAsync("TianJinGetReportFormPDFByFormNo", new object[] {
                        FormNo,
                        FormNoFormat,
                        SplitChar,
                        RangeDay,
                        flag}, this.TianJinGetReportFormPDFByFormNoOperationCompleted, userState);
        }
        
        private void OnTianJinGetReportFormPDFByFormNoOperationCompleted(object arg) {
            if ((this.TianJinGetReportFormPDFByFormNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TianJinGetReportFormPDFByFormNoCompleted(this, new TianJinGetReportFormPDFByFormNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ZhongRiYiYuanZiZhuDaDanReportFormServiceCompletedEventHandler(object sender, ZhongRiYiYuanZiZhuDaDanReportFormServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ZhongRiYiYuanZiZhuDaDanReportFormServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ZhongRiYiYuanZiZhuDaDanReportFormServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormPdfPath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrorInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReportFormPDFByPatNoCompletedEventHandler(object sender, GetReportFormPDFByPatNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFormPDFByPatNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFormPDFByPatNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormPdfPath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrorInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReportFormPDFByFormNo_FTPCompletedEventHandler(object sender, GetReportFormPDFByFormNo_FTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFormPDFByFormNo_FTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFormPDFByFormNo_FTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormPdfPath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrorInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLisReportBase64CompletedEventHandler(object sender, GetLisReportBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLisReportBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLisReportBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReportFormPDFByFields_Base64StringCompletedEventHandler(object sender, GetReportFormPDFByFields_Base64StringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFormPDFByFields_Base64StringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFormPDFByFields_Base64StringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormPdfPathBtis {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrorInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NeiJiangGetReportFormPDFListByUserIdCompletedEventHandler(object sender, NeiJiangGetReportFormPDFListByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NeiJiangGetReportFormPDFListByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NeiJiangGetReportFormPDFListByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReportData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NeiJiangGetReportFormPDFListBitsByDSXMLCompletedEventHandler(object sender, NeiJiangGetReportFormPDFListBitsByDSXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NeiJiangGetReportFormPDFListBitsByDSXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NeiJiangGetReportFormPDFListBitsByDSXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReportData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NeiJiangUpdateReportPrintTimesCompletedEventHandler(object sender, NeiJiangUpdateReportPrintTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NeiJiangUpdateReportPrintTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NeiJiangUpdateReportPrintTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReportData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TianJinGetReportFormPDFByFormNoCompletedEventHandler(object sender, TianJinGetReportFormPDFByFormNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TianJinGetReportFormPDFByFormNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TianJinGetReportFormPDFByFormNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormPdfPath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrorInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591