/**
 * 文档起草基本应用
 * @author longfc
 * @version 2016-06-22
 */
Ext.define('Shell.class.qms.ffile.create.CreateApp', {
	extend: 'Shell.class.qms.basic.basicApp',
	title: '文档起草',

	hasReset: true,
	checkOne: false,
	/**是否显示新增按钮*/
	hasAdd: true,
	/**文件的操作记录类型*/
	fFileOperationType: 1,
	/**文档状态值*/
	fFileStatus: 1,

	isSearchUSERID: true,
	/**基本应用的文档确认(通过/同意)操作按钮是否显示*/
	HiddenAgreeButton: false,
	/**基本应用的文档确认(通过/同意)操作按钮显示名称*/
	AgreeButtonText: "确认提交",
	/**基本应用的文档确认(通过/同意)操作按钮的功能类型*/
	AgreeOperationType: 1,

	/**基本应用的文档确认(不通过/不同意)操作按钮是否显示*/
	HiddenDisagreeButton: false,
	/**基本应用的文档确认(不通过/不同意)操作按钮显示名称*/
	DisagreeButtonText: "暂存",
	/**基本应用的文档确认(不通过/不同意)操作按钮的功能类型*/
	DisagreeOperationType: 1,
	/**提交并发布的操作按钮是否显示*/
	HiddenPublishButton: false,
	/**隐藏阅读人信息*/
	HiddenFFileReadingLog: true,
	hasCheckFTypeTree: true,
	hasShow: false,
	/**功能按钮是否隐藏:组件是否隐藏,只起草,自动审核,自动批准,自动发布*/
	hiddenRadiogroupChoose: [false, false, false, false, false],
	/**文档状态选择项的默认值*/
	defaultStatusValue: "1",
	afterRender: function() {
		var me = this;
		me.callParent(arguments);
		var Grid = me.getComponent('Grid');
		Grid.on({
			itemdblclick: function(grid, record, item, index, e, eOpts) {
				var id = record.get('FFile_Id');
				var status = record.get('FFile_Status');
				var OriginalFileID = record.get('FFile_OriginalFileID');
				if(OriginalFileID == '' || OriginalFileID == null) {
					OriginalFileID = id;
				}
				switch(status) {
					case "1": //状态为
						if(me.FTYPE == "" || me.FTYPE.length < 1) {
							JShell.Msg.alert("当前应用的FTYPE为空,不能操作");
						} else {
							Grid.formtype = "edit";
							Grid.setAppOperationType();
							Grid.openFFileForm(id, me.fFileOperationType, 1, "edit", OriginalFileID);
						}
						break;
					default:
						if(me.FTYPE == "" || me.FTYPE.length < 1) {
							JShell.Msg.alert("当前应用的FTYPE为空,不能操作");
						} else {
							Grid.formtype = "show";
							Grid.openFFileShowForm(id);
						}
						break;
				}
			},
			onAddClick: function() {
				Grid.formtype = "add";
				if(Grid.BDickTreeId == "0") {
					JShell.Msg.alert("不能选择文档树根节点");
				} else if(me.FTYPE == "" || me.FTYPE.length < 1) {
					JShell.Msg.alert("当前应用的FTYPE为空,不能操作");
				} else if(Grid.BDickTreeId == null || Grid.BDickTreeId == "") {
					JShell.Msg.alert("没有获取文档树信息");
				} else {
					Grid.openFFileForm("", Grid.fFileOperationType, 1, "add");
				}
			},
			onShowClick: function() {
				var records = Grid.getSelectionModel().getSelection();
				if(records && records.length < 1) {
					JShell.Msg.error(JShell.All.CHECK_ONE_RECORD);
					return;
				}
				var id = records[0].get("FFile_Id");
				me.openFFileShowForm(id);
			},
			onDisagreeSaveClick: function(grid) {
				Grid.CancelFFileStatus(2, 1, 8, "撤消提交操作");
			}
		});
	},

	initComponent: function() {
		var me = this;
		/**对外公开:允许外部调用应用时传入树节点值(如IDS=123,232)*/
		me.IDS = me.IDS || "";
		/**抄送人,阅读人的按人员选择时的角色姓名传入*/
		me.ROLEHREMPLOYEECNAME = me.ROLEHREMPLOYEECNAME || "";
		/**编辑文档类型(如新闻/通知/文档/修订文档)*/
		me.FTYPE = me.FTYPE || "";
		if(me.IDS && me.IDS.toString().length > 0) {
			me.treeShortcodeWhere = "idListStr=" + me.IDS;
		} else {
			me.treeShortcodeWhere = me.treeShortcodeWhere || "";
		}

		me.AgreeOfGridText = "确认提交";
		me.HiddenAgreeOfGrid = true;
		me.DisagreeOfGridText = "撤消提交";
		me.HiddenDisagreeOfGrid = false;
		me.title = me.title || "文档编辑";
		me.callParent(arguments);
	}
});