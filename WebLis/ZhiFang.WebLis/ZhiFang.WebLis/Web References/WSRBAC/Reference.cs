//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18408 版自动生成。
// 
#pragma warning disable 1591

namespace ZhiFang.WebLis.WSRBAC {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSRbacSoap", Namespace="http://tempuri.org/")]
    public partial class WSRbac : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserOrgInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermissibilityRunModulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermissibilityRunModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermissibilityModuleButtonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoListByPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPostInfoListByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePassWordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSRbac() {
            this.Url = global::ZhiFang.WebLis.Properties.Settings.Default.ZhiFang_WebLis_WSRBAC_WSRbac;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        public event getUserOrgInfoCompletedEventHandler getUserOrgInfoCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetPermissibilityRunModulesCompletedEventHandler GetPermissibilityRunModulesCompleted;
        
        /// <remarks/>
        public event GetPermissibilityRunModuleCompletedEventHandler GetPermissibilityRunModuleCompleted;
        
        /// <remarks/>
        public event GetPermissibilityModuleButtonsCompletedEventHandler GetPermissibilityModuleButtonsCompleted;
        
        /// <remarks/>
        public event getUserInfoListByPostCompletedEventHandler getUserInfoListByPostCompleted;
        
        /// <remarks/>
        public event getPostInfoListByUserCompletedEventHandler getPostInfoListByUserCompleted;
        
        /// <remarks/>
        public event ChangePassWordCompletedEventHandler ChangePassWordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserInfo(string UserName) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string UserName) {
            this.getUserInfoAsync(UserName, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string UserName, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        UserName}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserOrgInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserOrgInfo(string UserName) {
            object[] results = this.Invoke("getUserOrgInfo", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserOrgInfoAsync(string UserName) {
            this.getUserOrgInfoAsync(UserName, null);
        }
        
        /// <remarks/>
        public void getUserOrgInfoAsync(string UserName, object userState) {
            if ((this.getUserOrgInfoOperationCompleted == null)) {
                this.getUserOrgInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOrgInfoOperationCompleted);
            }
            this.InvokeAsync("getUserOrgInfo", new object[] {
                        UserName}, this.getUserOrgInfoOperationCompleted, userState);
        }
        
        private void OngetUserOrgInfoOperationCompleted(object arg) {
            if ((this.getUserOrgInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserOrgInfoCompleted(this, new getUserOrgInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string UserName, string Password, out string descr) {
            object[] results = this.Invoke("Login", new object[] {
                        UserName,
                        Password});
            descr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string UserName, string Password) {
            this.LoginAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string UserName, string Password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        UserName,
                        Password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPermissibilityRunModules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPermissibilityRunModules(string UserName) {
            object[] results = this.Invoke("GetPermissibilityRunModules", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermissibilityRunModulesAsync(string UserName) {
            this.GetPermissibilityRunModulesAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetPermissibilityRunModulesAsync(string UserName, object userState) {
            if ((this.GetPermissibilityRunModulesOperationCompleted == null)) {
                this.GetPermissibilityRunModulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissibilityRunModulesOperationCompleted);
            }
            this.InvokeAsync("GetPermissibilityRunModules", new object[] {
                        UserName}, this.GetPermissibilityRunModulesOperationCompleted, userState);
        }
        
        private void OnGetPermissibilityRunModulesOperationCompleted(object arg) {
            if ((this.GetPermissibilityRunModulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermissibilityRunModulesCompleted(this, new GetPermissibilityRunModulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPermissibilityRunModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPermissibilityRunModule(string UserName, string ModuleNo) {
            object[] results = this.Invoke("GetPermissibilityRunModule", new object[] {
                        UserName,
                        ModuleNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermissibilityRunModuleAsync(string UserName, string ModuleNo) {
            this.GetPermissibilityRunModuleAsync(UserName, ModuleNo, null);
        }
        
        /// <remarks/>
        public void GetPermissibilityRunModuleAsync(string UserName, string ModuleNo, object userState) {
            if ((this.GetPermissibilityRunModuleOperationCompleted == null)) {
                this.GetPermissibilityRunModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissibilityRunModuleOperationCompleted);
            }
            this.InvokeAsync("GetPermissibilityRunModule", new object[] {
                        UserName,
                        ModuleNo}, this.GetPermissibilityRunModuleOperationCompleted, userState);
        }
        
        private void OnGetPermissibilityRunModuleOperationCompleted(object arg) {
            if ((this.GetPermissibilityRunModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermissibilityRunModuleCompleted(this, new GetPermissibilityRunModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPermissibilityModuleButtons", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPermissibilityModuleButtons(string UserName, string ModuleNo) {
            object[] results = this.Invoke("GetPermissibilityModuleButtons", new object[] {
                        UserName,
                        ModuleNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermissibilityModuleButtonsAsync(string UserName, string ModuleNo) {
            this.GetPermissibilityModuleButtonsAsync(UserName, ModuleNo, null);
        }
        
        /// <remarks/>
        public void GetPermissibilityModuleButtonsAsync(string UserName, string ModuleNo, object userState) {
            if ((this.GetPermissibilityModuleButtonsOperationCompleted == null)) {
                this.GetPermissibilityModuleButtonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissibilityModuleButtonsOperationCompleted);
            }
            this.InvokeAsync("GetPermissibilityModuleButtons", new object[] {
                        UserName,
                        ModuleNo}, this.GetPermissibilityModuleButtonsOperationCompleted, userState);
        }
        
        private void OnGetPermissibilityModuleButtonsOperationCompleted(object arg) {
            if ((this.GetPermissibilityModuleButtonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermissibilityModuleButtonsCompleted(this, new GetPermissibilityModuleButtonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserInfoListByPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserInfoListByPost(string PostName) {
            object[] results = this.Invoke("getUserInfoListByPost", new object[] {
                        PostName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoListByPostAsync(string PostName) {
            this.getUserInfoListByPostAsync(PostName, null);
        }
        
        /// <remarks/>
        public void getUserInfoListByPostAsync(string PostName, object userState) {
            if ((this.getUserInfoListByPostOperationCompleted == null)) {
                this.getUserInfoListByPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoListByPostOperationCompleted);
            }
            this.InvokeAsync("getUserInfoListByPost", new object[] {
                        PostName}, this.getUserInfoListByPostOperationCompleted, userState);
        }
        
        private void OngetUserInfoListByPostOperationCompleted(object arg) {
            if ((this.getUserInfoListByPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoListByPostCompleted(this, new getUserInfoListByPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPostInfoListByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPostInfoListByUser(string Account) {
            object[] results = this.Invoke("getPostInfoListByUser", new object[] {
                        Account});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPostInfoListByUserAsync(string Account) {
            this.getPostInfoListByUserAsync(Account, null);
        }
        
        /// <remarks/>
        public void getPostInfoListByUserAsync(string Account, object userState) {
            if ((this.getPostInfoListByUserOperationCompleted == null)) {
                this.getPostInfoListByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPostInfoListByUserOperationCompleted);
            }
            this.InvokeAsync("getPostInfoListByUser", new object[] {
                        Account}, this.getPostInfoListByUserOperationCompleted, userState);
        }
        
        private void OngetPostInfoListByUserOperationCompleted(object arg) {
            if ((this.getPostInfoListByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPostInfoListByUserCompleted(this, new getPostInfoListByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassWord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassWord(string userId, string userpwd) {
            object[] results = this.Invoke("ChangePassWord", new object[] {
                        userId,
                        userpwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePassWordAsync(string userId, string userpwd) {
            this.ChangePassWordAsync(userId, userpwd, null);
        }
        
        /// <remarks/>
        public void ChangePassWordAsync(string userId, string userpwd, object userState) {
            if ((this.ChangePassWordOperationCompleted == null)) {
                this.ChangePassWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePassWordOperationCompleted);
            }
            this.InvokeAsync("ChangePassWord", new object[] {
                        userId,
                        userpwd}, this.ChangePassWordOperationCompleted, userState);
        }
        
        private void OnChangePassWordOperationCompleted(object arg) {
            if ((this.ChangePassWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePassWordCompleted(this, new ChangePassWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getUserOrgInfoCompletedEventHandler(object sender, getUserOrgInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserOrgInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserOrgInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string descr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPermissibilityRunModulesCompletedEventHandler(object sender, GetPermissibilityRunModulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermissibilityRunModulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermissibilityRunModulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPermissibilityRunModuleCompletedEventHandler(object sender, GetPermissibilityRunModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermissibilityRunModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermissibilityRunModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPermissibilityModuleButtonsCompletedEventHandler(object sender, GetPermissibilityModuleButtonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermissibilityModuleButtonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermissibilityModuleButtonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getUserInfoListByPostCompletedEventHandler(object sender, getUserInfoListByPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoListByPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoListByPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getPostInfoListByUserCompletedEventHandler(object sender, getPostInfoListByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPostInfoListByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPostInfoListByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangePassWordCompletedEventHandler(object sender, ChangePassWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePassWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePassWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591