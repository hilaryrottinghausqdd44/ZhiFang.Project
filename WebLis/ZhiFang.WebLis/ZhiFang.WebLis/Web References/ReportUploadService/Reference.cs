//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace ZhiFang.WebLis.ReportUploadService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebLisReportSoap", Namespace="http://tempuri.org1/")]
    public partial class WebLisReport : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpLoadReportFromBytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadReportImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadReportFromBytes_ImageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReportStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormListBySerialNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormListByOrgOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormItemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormItemListBySerialNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormItemListByReportFormIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormItemListByFormNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormItemListByClientNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback downLoadPDFFileContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadPDFFileBySerialNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebLisReport() {
            this.Url = global::ZhiFang.WebLis.Properties.Settings.Default.ZhiFang_WebLis_ReportUploadService_WebLisReport;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpLoadReportFromBytesCompletedEventHandler UpLoadReportFromBytesCompleted;
        
        /// <remarks/>
        public event UpLoadReportImageCompletedEventHandler UpLoadReportImageCompleted;
        
        /// <remarks/>
        public event UpLoadReportFromBytes_ImageListCompletedEventHandler UpLoadReportFromBytes_ImageListCompleted;
        
        /// <remarks/>
        public event UpdateReportStatusCompletedEventHandler UpdateReportStatusCompleted;
        
        /// <remarks/>
        public event DownloadReportFormListCompletedEventHandler DownloadReportFormListCompleted;
        
        /// <remarks/>
        public event DownloadReportFormListBySerialNoCompletedEventHandler DownloadReportFormListBySerialNoCompleted;
        
        /// <remarks/>
        public event DownloadReportFormListByOrgCompletedEventHandler DownloadReportFormListByOrgCompleted;
        
        /// <remarks/>
        public event DownloadReportFormItemListCompletedEventHandler DownloadReportFormItemListCompleted;
        
        /// <remarks/>
        public event DownloadReportFormItemListBySerialNoCompletedEventHandler DownloadReportFormItemListBySerialNoCompleted;
        
        /// <remarks/>
        public event DownloadReportFormItemListByReportFormIDCompletedEventHandler DownloadReportFormItemListByReportFormIDCompleted;
        
        /// <remarks/>
        public event DownloadReportFormItemListByFormNOCompletedEventHandler DownloadReportFormItemListByFormNOCompleted;
        
        /// <remarks/>
        public event DownloadReportFormItemListByClientNOCompletedEventHandler DownloadReportFormItemListByClientNOCompleted;
        
        /// <remarks/>
        public event downLoadPDFFileContentCompletedEventHandler downLoadPDFFileContentCompleted;
        
        /// <remarks/>
        public event DownloadPDFFileBySerialNoCompletedEventHandler DownloadPDFFileBySerialNoCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/UpLoadReportFromBytes", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int UpLoadReportFromBytes(string token, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] xmlData, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] pdfdata, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] pdfdata_td, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] fileData, string fileType, out string errorMsg) {
            object[] results = this.Invoke("UpLoadReportFromBytes", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytesAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType) {
            this.UpLoadReportFromBytesAsync(token, xmlData, pdfdata, pdfdata_td, fileData, fileType, null);
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytesAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType, object userState) {
            if ((this.UpLoadReportFromBytesOperationCompleted == null)) {
                this.UpLoadReportFromBytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadReportFromBytesOperationCompleted);
            }
            this.InvokeAsync("UpLoadReportFromBytes", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType}, this.UpLoadReportFromBytesOperationCompleted, userState);
        }
        
        private void OnUpLoadReportFromBytesOperationCompleted(object arg) {
            if ((this.UpLoadReportFromBytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadReportFromBytesCompleted(this, new UpLoadReportFromBytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/UpLoadReportImage", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public bool UpLoadReportImage(string ImageName, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] ImageData, out string errorMsg) {
            object[] results = this.Invoke("UpLoadReportImage", new object[] {
                        ImageName,
                        ImageData});
            errorMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadReportImageAsync(string ImageName, byte[] ImageData) {
            this.UpLoadReportImageAsync(ImageName, ImageData, null);
        }
        
        /// <remarks/>
        public void UpLoadReportImageAsync(string ImageName, byte[] ImageData, object userState) {
            if ((this.UpLoadReportImageOperationCompleted == null)) {
                this.UpLoadReportImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadReportImageOperationCompleted);
            }
            this.InvokeAsync("UpLoadReportImage", new object[] {
                        ImageName,
                        ImageData}, this.UpLoadReportImageOperationCompleted, userState);
        }
        
        private void OnUpLoadReportImageOperationCompleted(object arg) {
            if ((this.UpLoadReportImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadReportImageCompleted(this, new UpLoadReportImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/UpLoadReportFromBytes_ImageList", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int UpLoadReportFromBytes_ImageList(string token, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] xmlData, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] pdfdata, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] pdfdata_td, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] fileData, string[] ImageNameList, byte[][] ImageByteList, string fileType, out string errorMsg) {
            object[] results = this.Invoke("UpLoadReportFromBytes_ImageList", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        ImageNameList,
                        ImageByteList,
                        fileType});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytes_ImageListAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string[] ImageNameList, byte[][] ImageByteList, string fileType) {
            this.UpLoadReportFromBytes_ImageListAsync(token, xmlData, pdfdata, pdfdata_td, fileData, ImageNameList, ImageByteList, fileType, null);
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytes_ImageListAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string[] ImageNameList, byte[][] ImageByteList, string fileType, object userState) {
            if ((this.UpLoadReportFromBytes_ImageListOperationCompleted == null)) {
                this.UpLoadReportFromBytes_ImageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadReportFromBytes_ImageListOperationCompleted);
            }
            this.InvokeAsync("UpLoadReportFromBytes_ImageList", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        ImageNameList,
                        ImageByteList,
                        fileType}, this.UpLoadReportFromBytes_ImageListOperationCompleted, userState);
        }
        
        private void OnUpLoadReportFromBytes_ImageListOperationCompleted(object arg) {
            if ((this.UpLoadReportFromBytes_ImageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadReportFromBytes_ImageListCompleted(this, new UpLoadReportFromBytes_ImageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/UpdateReportStatus", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public bool UpdateReportStatus(string barcode, string weblisflag, out string errmsg) {
            object[] results = this.Invoke("UpdateReportStatus", new object[] {
                        barcode,
                        weblisflag});
            errmsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReportStatusAsync(string barcode, string weblisflag) {
            this.UpdateReportStatusAsync(barcode, weblisflag, null);
        }
        
        /// <remarks/>
        public void UpdateReportStatusAsync(string barcode, string weblisflag, object userState) {
            if ((this.UpdateReportStatusOperationCompleted == null)) {
                this.UpdateReportStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReportStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateReportStatus", new object[] {
                        barcode,
                        weblisflag}, this.UpdateReportStatusOperationCompleted, userState);
        }
        
        private void OnUpdateReportStatusOperationCompleted(object arg) {
            if ((this.UpdateReportStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReportStatusCompleted(this, new UpdateReportStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadReportFormList", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadReportFormList(string token, string whereSQL, out string errorMsg, out string returnValue) {
            object[] results = this.Invoke("DownloadReportFormList", new object[] {
                        token,
                        whereSQL});
            errorMsg = ((string)(results[1]));
            returnValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormListAsync(string token, string whereSQL) {
            this.DownloadReportFormListAsync(token, whereSQL, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormListAsync(string token, string whereSQL, object userState) {
            if ((this.DownloadReportFormListOperationCompleted == null)) {
                this.DownloadReportFormListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormListOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormList", new object[] {
                        token,
                        whereSQL}, this.DownloadReportFormListOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormListOperationCompleted(object arg) {
            if ((this.DownloadReportFormListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormListCompleted(this, new DownloadReportFormListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadReportFormListBySerialNo", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadReportFormListBySerialNo(string token, string SerialNo, out string errorMsg, out string returnValue) {
            object[] results = this.Invoke("DownloadReportFormListBySerialNo", new object[] {
                        token,
                        SerialNo});
            errorMsg = ((string)(results[1]));
            returnValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormListBySerialNoAsync(string token, string SerialNo) {
            this.DownloadReportFormListBySerialNoAsync(token, SerialNo, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormListBySerialNoAsync(string token, string SerialNo, object userState) {
            if ((this.DownloadReportFormListBySerialNoOperationCompleted == null)) {
                this.DownloadReportFormListBySerialNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormListBySerialNoOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormListBySerialNo", new object[] {
                        token,
                        SerialNo}, this.DownloadReportFormListBySerialNoOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormListBySerialNoOperationCompleted(object arg) {
            if ((this.DownloadReportFormListBySerialNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormListBySerialNoCompleted(this, new DownloadReportFormListBySerialNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadReportFormListByOrg", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadReportFormListByOrg(string token, string OrgName, string WhereClause, out string errorMsg, out string returnValue) {
            object[] results = this.Invoke("DownloadReportFormListByOrg", new object[] {
                        token,
                        OrgName,
                        WhereClause});
            errorMsg = ((string)(results[1]));
            returnValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormListByOrgAsync(string token, string OrgName, string WhereClause) {
            this.DownloadReportFormListByOrgAsync(token, OrgName, WhereClause, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormListByOrgAsync(string token, string OrgName, string WhereClause, object userState) {
            if ((this.DownloadReportFormListByOrgOperationCompleted == null)) {
                this.DownloadReportFormListByOrgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormListByOrgOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormListByOrg", new object[] {
                        token,
                        OrgName,
                        WhereClause}, this.DownloadReportFormListByOrgOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormListByOrgOperationCompleted(object arg) {
            if ((this.DownloadReportFormListByOrgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormListByOrgCompleted(this, new DownloadReportFormListByOrgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadReportFormItemList", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadReportFormItemList(string token, string whereSQL, out string errorMsg, out string returnValue) {
            object[] results = this.Invoke("DownloadReportFormItemList", new object[] {
                        token,
                        whereSQL});
            errorMsg = ((string)(results[1]));
            returnValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListAsync(string token, string whereSQL) {
            this.DownloadReportFormItemListAsync(token, whereSQL, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListAsync(string token, string whereSQL, object userState) {
            if ((this.DownloadReportFormItemListOperationCompleted == null)) {
                this.DownloadReportFormItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormItemListOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormItemList", new object[] {
                        token,
                        whereSQL}, this.DownloadReportFormItemListOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormItemListOperationCompleted(object arg) {
            if ((this.DownloadReportFormItemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormItemListCompleted(this, new DownloadReportFormItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadReportFormItemListBySerialNo", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadReportFormItemListBySerialNo(string token, string SerialNo, out string errorMsg, out string returnValue) {
            object[] results = this.Invoke("DownloadReportFormItemListBySerialNo", new object[] {
                        token,
                        SerialNo});
            errorMsg = ((string)(results[1]));
            returnValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListBySerialNoAsync(string token, string SerialNo) {
            this.DownloadReportFormItemListBySerialNoAsync(token, SerialNo, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListBySerialNoAsync(string token, string SerialNo, object userState) {
            if ((this.DownloadReportFormItemListBySerialNoOperationCompleted == null)) {
                this.DownloadReportFormItemListBySerialNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormItemListBySerialNoOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormItemListBySerialNo", new object[] {
                        token,
                        SerialNo}, this.DownloadReportFormItemListBySerialNoOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormItemListBySerialNoOperationCompleted(object arg) {
            if ((this.DownloadReportFormItemListBySerialNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormItemListBySerialNoCompleted(this, new DownloadReportFormItemListBySerialNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadReportFormItemListByReportFormID", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadReportFormItemListByReportFormID(string token, string ReportFormID, out string errorMsg, out string returnValue) {
            object[] results = this.Invoke("DownloadReportFormItemListByReportFormID", new object[] {
                        token,
                        ReportFormID});
            errorMsg = ((string)(results[1]));
            returnValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListByReportFormIDAsync(string token, string ReportFormID) {
            this.DownloadReportFormItemListByReportFormIDAsync(token, ReportFormID, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListByReportFormIDAsync(string token, string ReportFormID, object userState) {
            if ((this.DownloadReportFormItemListByReportFormIDOperationCompleted == null)) {
                this.DownloadReportFormItemListByReportFormIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormItemListByReportFormIDOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormItemListByReportFormID", new object[] {
                        token,
                        ReportFormID}, this.DownloadReportFormItemListByReportFormIDOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormItemListByReportFormIDOperationCompleted(object arg) {
            if ((this.DownloadReportFormItemListByReportFormIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormItemListByReportFormIDCompleted(this, new DownloadReportFormItemListByReportFormIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadReportFormItemListByFormNO", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadReportFormItemListByFormNO(string token, string FormNO, out string errorMsg, out string returnValue) {
            object[] results = this.Invoke("DownloadReportFormItemListByFormNO", new object[] {
                        token,
                        FormNO});
            errorMsg = ((string)(results[1]));
            returnValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListByFormNOAsync(string token, string FormNO) {
            this.DownloadReportFormItemListByFormNOAsync(token, FormNO, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListByFormNOAsync(string token, string FormNO, object userState) {
            if ((this.DownloadReportFormItemListByFormNOOperationCompleted == null)) {
                this.DownloadReportFormItemListByFormNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormItemListByFormNOOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormItemListByFormNO", new object[] {
                        token,
                        FormNO}, this.DownloadReportFormItemListByFormNOOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormItemListByFormNOOperationCompleted(object arg) {
            if ((this.DownloadReportFormItemListByFormNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormItemListByFormNOCompleted(this, new DownloadReportFormItemListByFormNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadReportFormItemListByClientNO", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadReportFormItemListByClientNO(string token, string ClientNO, out string errorMsg, out string returnValue) {
            object[] results = this.Invoke("DownloadReportFormItemListByClientNO", new object[] {
                        token,
                        ClientNO});
            errorMsg = ((string)(results[1]));
            returnValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListByClientNOAsync(string token, string ClientNO) {
            this.DownloadReportFormItemListByClientNOAsync(token, ClientNO, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormItemListByClientNOAsync(string token, string ClientNO, object userState) {
            if ((this.DownloadReportFormItemListByClientNOOperationCompleted == null)) {
                this.DownloadReportFormItemListByClientNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormItemListByClientNOOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormItemListByClientNO", new object[] {
                        token,
                        ClientNO}, this.DownloadReportFormItemListByClientNOOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormItemListByClientNOOperationCompleted(object arg) {
            if ((this.DownloadReportFormItemListByClientNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormItemListByClientNOCompleted(this, new DownloadReportFormItemListByClientNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/downLoadPDFFileContent", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int downLoadPDFFileContent(string token, string fileName, out string errorMsg, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] returnValue) {
            object[] results = this.Invoke("downLoadPDFFileContent", new object[] {
                        token,
                        fileName});
            errorMsg = ((string)(results[1]));
            returnValue = ((byte[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void downLoadPDFFileContentAsync(string token, string fileName) {
            this.downLoadPDFFileContentAsync(token, fileName, null);
        }
        
        /// <remarks/>
        public void downLoadPDFFileContentAsync(string token, string fileName, object userState) {
            if ((this.downLoadPDFFileContentOperationCompleted == null)) {
                this.downLoadPDFFileContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownLoadPDFFileContentOperationCompleted);
            }
            this.InvokeAsync("downLoadPDFFileContent", new object[] {
                        token,
                        fileName}, this.downLoadPDFFileContentOperationCompleted, userState);
        }
        
        private void OndownLoadPDFFileContentOperationCompleted(object arg) {
            if ((this.downLoadPDFFileContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.downLoadPDFFileContentCompleted(this, new downLoadPDFFileContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/DownloadPDFFileBySerialNo", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public int DownloadPDFFileBySerialNo(string token, string SerialNo, out string errorMsg, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] returnValue) {
            object[] results = this.Invoke("DownloadPDFFileBySerialNo", new object[] {
                        token,
                        SerialNo});
            errorMsg = ((string)(results[1]));
            returnValue = ((byte[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadPDFFileBySerialNoAsync(string token, string SerialNo) {
            this.DownloadPDFFileBySerialNoAsync(token, SerialNo, null);
        }
        
        /// <remarks/>
        public void DownloadPDFFileBySerialNoAsync(string token, string SerialNo, object userState) {
            if ((this.DownloadPDFFileBySerialNoOperationCompleted == null)) {
                this.DownloadPDFFileBySerialNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadPDFFileBySerialNoOperationCompleted);
            }
            this.InvokeAsync("DownloadPDFFileBySerialNo", new object[] {
                        token,
                        SerialNo}, this.DownloadPDFFileBySerialNoOperationCompleted, userState);
        }
        
        private void OnDownloadPDFFileBySerialNoOperationCompleted(object arg) {
            if ((this.DownloadPDFFileBySerialNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadPDFFileBySerialNoCompleted(this, new DownloadPDFFileBySerialNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org1/UserLogin", RequestNamespace="http://tempuri.org1/", ResponseNamespace="http://tempuri.org1/")]
        public string UserLogin(string UserName, string Password, out string ErrDescription) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        UserName,
                        Password});
            ErrDescription = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string UserName, string Password) {
            this.UserLoginAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string UserName, string Password, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        UserName,
                        Password}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpLoadReportFromBytesCompletedEventHandler(object sender, UpLoadReportFromBytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadReportFromBytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadReportFromBytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpLoadReportImageCompletedEventHandler(object sender, UpLoadReportImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadReportImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadReportImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpLoadReportFromBytes_ImageListCompletedEventHandler(object sender, UpLoadReportFromBytes_ImageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadReportFromBytes_ImageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadReportFromBytes_ImageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateReportStatusCompletedEventHandler(object sender, UpdateReportStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReportStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReportStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadReportFormListCompletedEventHandler(object sender, DownloadReportFormListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadReportFormListBySerialNoCompletedEventHandler(object sender, DownloadReportFormListBySerialNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormListBySerialNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormListBySerialNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadReportFormListByOrgCompletedEventHandler(object sender, DownloadReportFormListByOrgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormListByOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormListByOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadReportFormItemListCompletedEventHandler(object sender, DownloadReportFormItemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadReportFormItemListBySerialNoCompletedEventHandler(object sender, DownloadReportFormItemListBySerialNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormItemListBySerialNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormItemListBySerialNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadReportFormItemListByReportFormIDCompletedEventHandler(object sender, DownloadReportFormItemListByReportFormIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormItemListByReportFormIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormItemListByReportFormIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadReportFormItemListByFormNOCompletedEventHandler(object sender, DownloadReportFormItemListByFormNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormItemListByFormNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormItemListByFormNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadReportFormItemListByClientNOCompletedEventHandler(object sender, DownloadReportFormItemListByClientNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormItemListByClientNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormItemListByClientNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void downLoadPDFFileContentCompletedEventHandler(object sender, downLoadPDFFileContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class downLoadPDFFileContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal downLoadPDFFileContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public byte[] returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadPDFFileBySerialNoCompletedEventHandler(object sender, DownloadPDFFileBySerialNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadPDFFileBySerialNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadPDFFileBySerialNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public byte[] returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrDescription {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591