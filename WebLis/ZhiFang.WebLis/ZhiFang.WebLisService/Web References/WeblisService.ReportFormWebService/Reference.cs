//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace ZhiFang.WebLisService.WeblisService.ReportFormWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportFormWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ReportFormWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportByBarcodeNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormIDListByBarcodeNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportFormIDListByClientBarcodeNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportByReportFormIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportByPersonIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReportByBarCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveDocumentViewInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryReportsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadReportFromBytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadReportFromStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadReportFromBytesNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUpLoadReportFromBytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadReportFromBytes_ImageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownLoadReportFormIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportUriOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFormColumnOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownLoadReportForm_PKIOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangestatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryReport_PKIOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownLoadReportFormPDFByAccountPassWordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportFormWebService() {
            this.Url = global::ZhiFang.WebLisService.Properties.Settings.Default.ZhiFang_WebLisService_WeblisService_ReportFormWebService_ReportFormWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event DownloadReportCompletedEventHandler DownloadReportCompleted;
        
        /// <remarks/>
        public event DownloadReportByBarcodeNoCompletedEventHandler DownloadReportByBarcodeNoCompleted;
        
        /// <remarks/>
        public event DownloadReportFormIDListByBarcodeNoCompletedEventHandler DownloadReportFormIDListByBarcodeNoCompleted;
        
        /// <remarks/>
        public event DownloadReportFormIDListByClientBarcodeNoCompletedEventHandler DownloadReportFormIDListByClientBarcodeNoCompleted;
        
        /// <remarks/>
        public event DownloadReportByReportFormIDCompletedEventHandler DownloadReportByReportFormIDCompleted;
        
        /// <remarks/>
        public event DownloadReportByPersonIDCompletedEventHandler DownloadReportByPersonIDCompleted;
        
        /// <remarks/>
        public event DownloadReportByBarCodeCompletedEventHandler DownloadReportByBarCodeCompleted;
        
        /// <remarks/>
        public event retrieveDocumentViewInfoCompletedEventHandler retrieveDocumentViewInfoCompleted;
        
        /// <remarks/>
        public event QueryReportsCountCompletedEventHandler QueryReportsCountCompleted;
        
        /// <remarks/>
        public event UpLoadReportFromBytesCompletedEventHandler UpLoadReportFromBytesCompleted;
        
        /// <remarks/>
        public event UpLoadReportFromStrCompletedEventHandler UpLoadReportFromStrCompleted;
        
        /// <remarks/>
        public event UpLoadReportFromBytesNewCompletedEventHandler UpLoadReportFromBytesNewCompleted;
        
        /// <remarks/>
        public event CheckUpLoadReportFromBytesCompletedEventHandler CheckUpLoadReportFromBytesCompleted;
        
        /// <remarks/>
        public event UpLoadReportFromBytes_ImageListCompletedEventHandler UpLoadReportFromBytes_ImageListCompleted;
        
        /// <remarks/>
        public event DownLoadReportFormIDCompletedEventHandler DownLoadReportFormIDCompleted;
        
        /// <remarks/>
        public event GetReportUriCompletedEventHandler GetReportUriCompleted;
        
        /// <remarks/>
        public event GetReportFormColumnCompletedEventHandler GetReportFormColumnCompleted;
        
        /// <remarks/>
        public event DownLoadReportForm_PKICompletedEventHandler DownLoadReportForm_PKICompleted;
        
        /// <remarks/>
        public event ChangestatusCompletedEventHandler ChangestatusCompleted;
        
        /// <remarks/>
        public event QueryReport_PKICompletedEventHandler QueryReport_PKICompleted;
        
        /// <remarks/>
        public event DownLoadReportFormPDFByAccountPassWordCompletedEventHandler DownLoadReportFormPDFByAccountPassWordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld(string name) {
            object[] results = this.Invoke("HelloWorld", new object[] {
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string name) {
            this.HelloWorldAsync(name, null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string name, object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[] {
                        name}, this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownloadReport(string SourceOrgID, string DestiOrgID, string BarCodeNo, out string nodeReportFormItem, out byte[][] FileReport, out string FileType, out string xmlWebLisOthers, out string ReturnDescription) {
            object[] results = this.Invoke("DownloadReport", new object[] {
                        SourceOrgID,
                        DestiOrgID,
                        BarCodeNo});
            nodeReportFormItem = ((string)(results[1]));
            FileReport = ((byte[][])(results[2]));
            FileType = ((string)(results[3]));
            xmlWebLisOthers = ((string)(results[4]));
            ReturnDescription = ((string)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportAsync(string SourceOrgID, string DestiOrgID, string BarCodeNo) {
            this.DownloadReportAsync(SourceOrgID, DestiOrgID, BarCodeNo, null);
        }
        
        /// <remarks/>
        public void DownloadReportAsync(string SourceOrgID, string DestiOrgID, string BarCodeNo, object userState) {
            if ((this.DownloadReportOperationCompleted == null)) {
                this.DownloadReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportOperationCompleted);
            }
            this.InvokeAsync("DownloadReport", new object[] {
                        SourceOrgID,
                        DestiOrgID,
                        BarCodeNo}, this.DownloadReportOperationCompleted, userState);
        }
        
        private void OnDownloadReportOperationCompleted(object arg) {
            if ((this.DownloadReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportCompleted(this, new DownloadReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadReportByBarcodeNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownloadReportByBarcodeNo(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID, out string WebReportXML, out string Error) {
            object[] results = this.Invoke("DownloadReportByBarcodeNo", new object[] {
                        Account,
                        PassWord,
                        BarcodeNo,
                        ClientNo,
                        DestiOrgID});
            WebReportXML = ((string)(results[1]));
            Error = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportByBarcodeNoAsync(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID) {
            this.DownloadReportByBarcodeNoAsync(Account, PassWord, BarcodeNo, ClientNo, DestiOrgID, null);
        }
        
        /// <remarks/>
        public void DownloadReportByBarcodeNoAsync(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID, object userState) {
            if ((this.DownloadReportByBarcodeNoOperationCompleted == null)) {
                this.DownloadReportByBarcodeNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportByBarcodeNoOperationCompleted);
            }
            this.InvokeAsync("DownloadReportByBarcodeNo", new object[] {
                        Account,
                        PassWord,
                        BarcodeNo,
                        ClientNo,
                        DestiOrgID}, this.DownloadReportByBarcodeNoOperationCompleted, userState);
        }
        
        private void OnDownloadReportByBarcodeNoOperationCompleted(object arg) {
            if ((this.DownloadReportByBarcodeNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportByBarcodeNoCompleted(this, new DownloadReportByBarcodeNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadReportFormIDListByBarcodeNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownloadReportFormIDListByBarcodeNo(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID, out string[] ReportFormIDList, out string Error) {
            object[] results = this.Invoke("DownloadReportFormIDListByBarcodeNo", new object[] {
                        Account,
                        PassWord,
                        BarcodeNo,
                        ClientNo,
                        DestiOrgID});
            ReportFormIDList = ((string[])(results[1]));
            Error = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormIDListByBarcodeNoAsync(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID) {
            this.DownloadReportFormIDListByBarcodeNoAsync(Account, PassWord, BarcodeNo, ClientNo, DestiOrgID, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormIDListByBarcodeNoAsync(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID, object userState) {
            if ((this.DownloadReportFormIDListByBarcodeNoOperationCompleted == null)) {
                this.DownloadReportFormIDListByBarcodeNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormIDListByBarcodeNoOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormIDListByBarcodeNo", new object[] {
                        Account,
                        PassWord,
                        BarcodeNo,
                        ClientNo,
                        DestiOrgID}, this.DownloadReportFormIDListByBarcodeNoOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormIDListByBarcodeNoOperationCompleted(object arg) {
            if ((this.DownloadReportFormIDListByBarcodeNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormIDListByBarcodeNoCompleted(this, new DownloadReportFormIDListByBarcodeNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadReportFormIDListByClientBarcodeNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownloadReportFormIDListByClientBarcodeNo(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID, out string[] ReportFormIDList, out string Error) {
            object[] results = this.Invoke("DownloadReportFormIDListByClientBarcodeNo", new object[] {
                        Account,
                        PassWord,
                        BarcodeNo,
                        ClientNo,
                        DestiOrgID});
            ReportFormIDList = ((string[])(results[1]));
            Error = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportFormIDListByClientBarcodeNoAsync(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID) {
            this.DownloadReportFormIDListByClientBarcodeNoAsync(Account, PassWord, BarcodeNo, ClientNo, DestiOrgID, null);
        }
        
        /// <remarks/>
        public void DownloadReportFormIDListByClientBarcodeNoAsync(string Account, string PassWord, string BarcodeNo, string ClientNo, string DestiOrgID, object userState) {
            if ((this.DownloadReportFormIDListByClientBarcodeNoOperationCompleted == null)) {
                this.DownloadReportFormIDListByClientBarcodeNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportFormIDListByClientBarcodeNoOperationCompleted);
            }
            this.InvokeAsync("DownloadReportFormIDListByClientBarcodeNo", new object[] {
                        Account,
                        PassWord,
                        BarcodeNo,
                        ClientNo,
                        DestiOrgID}, this.DownloadReportFormIDListByClientBarcodeNoOperationCompleted, userState);
        }
        
        private void OnDownloadReportFormIDListByClientBarcodeNoOperationCompleted(object arg) {
            if ((this.DownloadReportFormIDListByClientBarcodeNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportFormIDListByClientBarcodeNoCompleted(this, new DownloadReportFormIDListByClientBarcodeNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadReportByReportFormID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownloadReportByReportFormID(string Account, string PassWord, string ReportFormID, string ClientNo, string DestiOrgID, out string WebReportXML, out string Error) {
            object[] results = this.Invoke("DownloadReportByReportFormID", new object[] {
                        Account,
                        PassWord,
                        ReportFormID,
                        ClientNo,
                        DestiOrgID});
            WebReportXML = ((string)(results[1]));
            Error = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportByReportFormIDAsync(string Account, string PassWord, string ReportFormID, string ClientNo, string DestiOrgID) {
            this.DownloadReportByReportFormIDAsync(Account, PassWord, ReportFormID, ClientNo, DestiOrgID, null);
        }
        
        /// <remarks/>
        public void DownloadReportByReportFormIDAsync(string Account, string PassWord, string ReportFormID, string ClientNo, string DestiOrgID, object userState) {
            if ((this.DownloadReportByReportFormIDOperationCompleted == null)) {
                this.DownloadReportByReportFormIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportByReportFormIDOperationCompleted);
            }
            this.InvokeAsync("DownloadReportByReportFormID", new object[] {
                        Account,
                        PassWord,
                        ReportFormID,
                        ClientNo,
                        DestiOrgID}, this.DownloadReportByReportFormIDOperationCompleted, userState);
        }
        
        private void OnDownloadReportByReportFormIDOperationCompleted(object arg) {
            if ((this.DownloadReportByReportFormIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportByReportFormIDCompleted(this, new DownloadReportByReportFormIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadReportByPersonID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownloadReportByPersonID(string Account, string PassWord, string[] PersonID, string ClientNo, out string[] WebReportXML, out string[] ReportFormImageList, out string Error) {
            object[] results = this.Invoke("DownloadReportByPersonID", new object[] {
                        Account,
                        PassWord,
                        PersonID,
                        ClientNo});
            WebReportXML = ((string[])(results[1]));
            ReportFormImageList = ((string[])(results[2]));
            Error = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportByPersonIDAsync(string Account, string PassWord, string[] PersonID, string ClientNo) {
            this.DownloadReportByPersonIDAsync(Account, PassWord, PersonID, ClientNo, null);
        }
        
        /// <remarks/>
        public void DownloadReportByPersonIDAsync(string Account, string PassWord, string[] PersonID, string ClientNo, object userState) {
            if ((this.DownloadReportByPersonIDOperationCompleted == null)) {
                this.DownloadReportByPersonIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportByPersonIDOperationCompleted);
            }
            this.InvokeAsync("DownloadReportByPersonID", new object[] {
                        Account,
                        PassWord,
                        PersonID,
                        ClientNo}, this.DownloadReportByPersonIDOperationCompleted, userState);
        }
        
        private void OnDownloadReportByPersonIDOperationCompleted(object arg) {
            if ((this.DownloadReportByPersonIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportByPersonIDCompleted(this, new DownloadReportByPersonIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadReportByBarCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownloadReportByBarCode(string Account, string PassWord, string[] BarCode, string ClientNo, out string[] WebReportXML, out string[] ReportFormImageList, out string Error) {
            object[] results = this.Invoke("DownloadReportByBarCode", new object[] {
                        Account,
                        PassWord,
                        BarCode,
                        ClientNo});
            WebReportXML = ((string[])(results[1]));
            ReportFormImageList = ((string[])(results[2]));
            Error = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReportByBarCodeAsync(string Account, string PassWord, string[] BarCode, string ClientNo) {
            this.DownloadReportByBarCodeAsync(Account, PassWord, BarCode, ClientNo, null);
        }
        
        /// <remarks/>
        public void DownloadReportByBarCodeAsync(string Account, string PassWord, string[] BarCode, string ClientNo, object userState) {
            if ((this.DownloadReportByBarCodeOperationCompleted == null)) {
                this.DownloadReportByBarCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReportByBarCodeOperationCompleted);
            }
            this.InvokeAsync("DownloadReportByBarCode", new object[] {
                        Account,
                        PassWord,
                        BarCode,
                        ClientNo}, this.DownloadReportByBarCodeOperationCompleted, userState);
        }
        
        private void OnDownloadReportByBarCodeOperationCompleted(object arg) {
            if ((this.DownloadReportByBarCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReportByBarCodeCompleted(this, new DownloadReportByBarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrieveDocumentViewInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string retrieveDocumentViewInfo(string documentId) {
            object[] results = this.Invoke("retrieveDocumentViewInfo", new object[] {
                        documentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveDocumentViewInfoAsync(string documentId) {
            this.retrieveDocumentViewInfoAsync(documentId, null);
        }
        
        /// <remarks/>
        public void retrieveDocumentViewInfoAsync(string documentId, object userState) {
            if ((this.retrieveDocumentViewInfoOperationCompleted == null)) {
                this.retrieveDocumentViewInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveDocumentViewInfoOperationCompleted);
            }
            this.InvokeAsync("retrieveDocumentViewInfo", new object[] {
                        documentId}, this.retrieveDocumentViewInfoOperationCompleted, userState);
        }
        
        private void OnretrieveDocumentViewInfoOperationCompleted(object arg) {
            if ((this.retrieveDocumentViewInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveDocumentViewInfoCompleted(this, new retrieveDocumentViewInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryReportsCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool QueryReportsCount(string SourceOrgID, string DestiOrgID, string BarCodeNo, out string BarCodeCounts, out string ReturnDescription) {
            object[] results = this.Invoke("QueryReportsCount", new object[] {
                        SourceOrgID,
                        DestiOrgID,
                        BarCodeNo});
            BarCodeCounts = ((string)(results[1]));
            ReturnDescription = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void QueryReportsCountAsync(string SourceOrgID, string DestiOrgID, string BarCodeNo) {
            this.QueryReportsCountAsync(SourceOrgID, DestiOrgID, BarCodeNo, null);
        }
        
        /// <remarks/>
        public void QueryReportsCountAsync(string SourceOrgID, string DestiOrgID, string BarCodeNo, object userState) {
            if ((this.QueryReportsCountOperationCompleted == null)) {
                this.QueryReportsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryReportsCountOperationCompleted);
            }
            this.InvokeAsync("QueryReportsCount", new object[] {
                        SourceOrgID,
                        DestiOrgID,
                        BarCodeNo}, this.QueryReportsCountOperationCompleted, userState);
        }
        
        private void OnQueryReportsCountOperationCompleted(object arg) {
            if ((this.QueryReportsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryReportsCountCompleted(this, new QueryReportsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpLoadReportFromBytes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpLoadReportFromBytes(string token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] xmlData, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata_td, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileData, string fileType, out string errorMsg) {
            object[] results = this.Invoke("UpLoadReportFromBytes", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytesAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType) {
            this.UpLoadReportFromBytesAsync(token, xmlData, pdfdata, pdfdata_td, fileData, fileType, null);
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytesAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType, object userState) {
            if ((this.UpLoadReportFromBytesOperationCompleted == null)) {
                this.UpLoadReportFromBytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadReportFromBytesOperationCompleted);
            }
            this.InvokeAsync("UpLoadReportFromBytes", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType}, this.UpLoadReportFromBytesOperationCompleted, userState);
        }
        
        private void OnUpLoadReportFromBytesOperationCompleted(object arg) {
            if ((this.UpLoadReportFromBytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadReportFromBytesCompleted(this, new UpLoadReportFromBytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpLoadReportFromStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpLoadReportFromStr(string token, string xmlData, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata_td, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileData, string fileType, out string errorMsg) {
            object[] results = this.Invoke("UpLoadReportFromStr", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadReportFromStrAsync(string token, string xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType) {
            this.UpLoadReportFromStrAsync(token, xmlData, pdfdata, pdfdata_td, fileData, fileType, null);
        }
        
        /// <remarks/>
        public void UpLoadReportFromStrAsync(string token, string xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType, object userState) {
            if ((this.UpLoadReportFromStrOperationCompleted == null)) {
                this.UpLoadReportFromStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadReportFromStrOperationCompleted);
            }
            this.InvokeAsync("UpLoadReportFromStr", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType}, this.UpLoadReportFromStrOperationCompleted, userState);
        }
        
        private void OnUpLoadReportFromStrOperationCompleted(object arg) {
            if ((this.UpLoadReportFromStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadReportFromStrCompleted(this, new UpLoadReportFromStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpLoadReportFromBytesNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpLoadReportFromBytesNew(string token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] xmlData, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata_td, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileData, string fileType, string checkclient, out string errorMsg) {
            object[] results = this.Invoke("UpLoadReportFromBytesNew", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType,
                        checkclient});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytesNewAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType, string checkclient) {
            this.UpLoadReportFromBytesNewAsync(token, xmlData, pdfdata, pdfdata_td, fileData, fileType, checkclient, null);
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytesNewAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType, string checkclient, object userState) {
            if ((this.UpLoadReportFromBytesNewOperationCompleted == null)) {
                this.UpLoadReportFromBytesNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadReportFromBytesNewOperationCompleted);
            }
            this.InvokeAsync("UpLoadReportFromBytesNew", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType,
                        checkclient}, this.UpLoadReportFromBytesNewOperationCompleted, userState);
        }
        
        private void OnUpLoadReportFromBytesNewOperationCompleted(object arg) {
            if ((this.UpLoadReportFromBytesNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadReportFromBytesNewCompleted(this, new UpLoadReportFromBytesNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUpLoadReportFromBytes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckUpLoadReportFromBytes(string token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] xmlData, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata_td, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileData, string fileType, string checkclient, out string errorMsg) {
            object[] results = this.Invoke("CheckUpLoadReportFromBytes", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType,
                        checkclient});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUpLoadReportFromBytesAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType, string checkclient) {
            this.CheckUpLoadReportFromBytesAsync(token, xmlData, pdfdata, pdfdata_td, fileData, fileType, checkclient, null);
        }
        
        /// <remarks/>
        public void CheckUpLoadReportFromBytesAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string fileType, string checkclient, object userState) {
            if ((this.CheckUpLoadReportFromBytesOperationCompleted == null)) {
                this.CheckUpLoadReportFromBytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUpLoadReportFromBytesOperationCompleted);
            }
            this.InvokeAsync("CheckUpLoadReportFromBytes", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        fileType,
                        checkclient}, this.CheckUpLoadReportFromBytesOperationCompleted, userState);
        }
        
        private void OnCheckUpLoadReportFromBytesOperationCompleted(object arg) {
            if ((this.CheckUpLoadReportFromBytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUpLoadReportFromBytesCompleted(this, new CheckUpLoadReportFromBytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpLoadReportFromBytes_ImageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpLoadReportFromBytes_ImageList(string token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] xmlData, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pdfdata_td, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileData, string[] ImageNameList, byte[][] ImageByteList, string fileType, out string errorMsg) {
            object[] results = this.Invoke("UpLoadReportFromBytes_ImageList", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        ImageNameList,
                        ImageByteList,
                        fileType});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytes_ImageListAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string[] ImageNameList, byte[][] ImageByteList, string fileType) {
            this.UpLoadReportFromBytes_ImageListAsync(token, xmlData, pdfdata, pdfdata_td, fileData, ImageNameList, ImageByteList, fileType, null);
        }
        
        /// <remarks/>
        public void UpLoadReportFromBytes_ImageListAsync(string token, byte[] xmlData, byte[] pdfdata, byte[] pdfdata_td, byte[] fileData, string[] ImageNameList, byte[][] ImageByteList, string fileType, object userState) {
            if ((this.UpLoadReportFromBytes_ImageListOperationCompleted == null)) {
                this.UpLoadReportFromBytes_ImageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadReportFromBytes_ImageListOperationCompleted);
            }
            this.InvokeAsync("UpLoadReportFromBytes_ImageList", new object[] {
                        token,
                        xmlData,
                        pdfdata,
                        pdfdata_td,
                        fileData,
                        ImageNameList,
                        ImageByteList,
                        fileType}, this.UpLoadReportFromBytes_ImageListOperationCompleted, userState);
        }
        
        private void OnUpLoadReportFromBytes_ImageListOperationCompleted(object arg) {
            if ((this.UpLoadReportFromBytes_ImageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadReportFromBytes_ImageListCompleted(this, new UpLoadReportFromBytes_ImageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownLoadReportFormID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownLoadReportFormID(string StartDate, string EndDate, string CNAME, string PhoneNumber, string HealthCardNumber, string IDCard, string ClientNo, out string WebReportXML, out string Error) {
            object[] results = this.Invoke("DownLoadReportFormID", new object[] {
                        StartDate,
                        EndDate,
                        CNAME,
                        PhoneNumber,
                        HealthCardNumber,
                        IDCard,
                        ClientNo});
            WebReportXML = ((string)(results[1]));
            Error = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownLoadReportFormIDAsync(string StartDate, string EndDate, string CNAME, string PhoneNumber, string HealthCardNumber, string IDCard, string ClientNo) {
            this.DownLoadReportFormIDAsync(StartDate, EndDate, CNAME, PhoneNumber, HealthCardNumber, IDCard, ClientNo, null);
        }
        
        /// <remarks/>
        public void DownLoadReportFormIDAsync(string StartDate, string EndDate, string CNAME, string PhoneNumber, string HealthCardNumber, string IDCard, string ClientNo, object userState) {
            if ((this.DownLoadReportFormIDOperationCompleted == null)) {
                this.DownLoadReportFormIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownLoadReportFormIDOperationCompleted);
            }
            this.InvokeAsync("DownLoadReportFormID", new object[] {
                        StartDate,
                        EndDate,
                        CNAME,
                        PhoneNumber,
                        HealthCardNumber,
                        IDCard,
                        ClientNo}, this.DownLoadReportFormIDOperationCompleted, userState);
        }
        
        private void OnDownLoadReportFormIDOperationCompleted(object arg) {
            if ((this.DownLoadReportFormIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownLoadReportFormIDCompleted(this, new DownLoadReportFormIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportUri", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetReportUri(string ReportFormID, string ReportFormTitle, out string ReportUri, out string ErrInfo) {
            object[] results = this.Invoke("GetReportUri", new object[] {
                        ReportFormID,
                        ReportFormTitle});
            ReportUri = ((string)(results[1]));
            ErrInfo = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportUriAsync(string ReportFormID, string ReportFormTitle) {
            this.GetReportUriAsync(ReportFormID, ReportFormTitle, null);
        }
        
        /// <remarks/>
        public void GetReportUriAsync(string ReportFormID, string ReportFormTitle, object userState) {
            if ((this.GetReportUriOperationCompleted == null)) {
                this.GetReportUriOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportUriOperationCompleted);
            }
            this.InvokeAsync("GetReportUri", new object[] {
                        ReportFormID,
                        ReportFormTitle}, this.GetReportUriOperationCompleted, userState);
        }
        
        private void OnGetReportUriOperationCompleted(object arg) {
            if ((this.GetReportUriCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportUriCompleted(this, new GetReportUriCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportFormColumn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportFormColumn() {
            object[] results = this.Invoke("GetReportFormColumn", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFormColumnAsync() {
            this.GetReportFormColumnAsync(null);
        }
        
        /// <remarks/>
        public void GetReportFormColumnAsync(object userState) {
            if ((this.GetReportFormColumnOperationCompleted == null)) {
                this.GetReportFormColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFormColumnOperationCompleted);
            }
            this.InvokeAsync("GetReportFormColumn", new object[0], this.GetReportFormColumnOperationCompleted, userState);
        }
        
        private void OnGetReportFormColumnOperationCompleted(object arg) {
            if ((this.GetReportFormColumnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFormColumnCompleted(this, new GetReportFormColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownLoadReportForm_PKI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownLoadReportForm_PKI(string ReportFormID, out System.Data.DataSet ReportItemFull, out System.Data.DataSet ReportMicroFull, out System.Data.DataSet ReportMarrowFull, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] pdfData, out string Error) {
            object[] results = this.Invoke("DownLoadReportForm_PKI", new object[] {
                        ReportFormID});
            ReportItemFull = ((System.Data.DataSet)(results[1]));
            ReportMicroFull = ((System.Data.DataSet)(results[2]));
            ReportMarrowFull = ((System.Data.DataSet)(results[3]));
            pdfData = ((byte[])(results[4]));
            Error = ((string)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownLoadReportForm_PKIAsync(string ReportFormID) {
            this.DownLoadReportForm_PKIAsync(ReportFormID, null);
        }
        
        /// <remarks/>
        public void DownLoadReportForm_PKIAsync(string ReportFormID, object userState) {
            if ((this.DownLoadReportForm_PKIOperationCompleted == null)) {
                this.DownLoadReportForm_PKIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownLoadReportForm_PKIOperationCompleted);
            }
            this.InvokeAsync("DownLoadReportForm_PKI", new object[] {
                        ReportFormID}, this.DownLoadReportForm_PKIOperationCompleted, userState);
        }
        
        private void OnDownLoadReportForm_PKIOperationCompleted(object arg) {
            if ((this.DownLoadReportForm_PKICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownLoadReportForm_PKICompleted(this, new DownLoadReportForm_PKICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Changestatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Changestatus(string BarCode, string ClientNo, string Error) {
            object[] results = this.Invoke("Changestatus", new object[] {
                        BarCode,
                        ClientNo,
                        Error});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangestatusAsync(string BarCode, string ClientNo, string Error) {
            this.ChangestatusAsync(BarCode, ClientNo, Error, null);
        }
        
        /// <remarks/>
        public void ChangestatusAsync(string BarCode, string ClientNo, string Error, object userState) {
            if ((this.ChangestatusOperationCompleted == null)) {
                this.ChangestatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangestatusOperationCompleted);
            }
            this.InvokeAsync("Changestatus", new object[] {
                        BarCode,
                        ClientNo,
                        Error}, this.ChangestatusOperationCompleted, userState);
        }
        
        private void OnChangestatusOperationCompleted(object arg) {
            if ((this.ChangestatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangestatusCompleted(this, new ChangestatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryReport_PKI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool QueryReport_PKI(string WebLisFlag, string ClientNo, string Startdate, string Enddate, out System.Data.DataSet ReportFormFull, out string Error) {
            object[] results = this.Invoke("QueryReport_PKI", new object[] {
                        WebLisFlag,
                        ClientNo,
                        Startdate,
                        Enddate});
            ReportFormFull = ((System.Data.DataSet)(results[1]));
            Error = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void QueryReport_PKIAsync(string WebLisFlag, string ClientNo, string Startdate, string Enddate) {
            this.QueryReport_PKIAsync(WebLisFlag, ClientNo, Startdate, Enddate, null);
        }
        
        /// <remarks/>
        public void QueryReport_PKIAsync(string WebLisFlag, string ClientNo, string Startdate, string Enddate, object userState) {
            if ((this.QueryReport_PKIOperationCompleted == null)) {
                this.QueryReport_PKIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryReport_PKIOperationCompleted);
            }
            this.InvokeAsync("QueryReport_PKI", new object[] {
                        WebLisFlag,
                        ClientNo,
                        Startdate,
                        Enddate}, this.QueryReport_PKIOperationCompleted, userState);
        }
        
        private void OnQueryReport_PKIOperationCompleted(object arg) {
            if ((this.QueryReport_PKICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryReport_PKICompleted(this, new QueryReport_PKICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownLoadReportFormPDFByAccountPassWord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownLoadReportFormPDFByAccountPassWord(string Account, string PassWord, string ClientNo, string ReportFormID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] PDFDataCenter, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] PDFDataLab, out string Error) {
            object[] results = this.Invoke("DownLoadReportFormPDFByAccountPassWord", new object[] {
                        Account,
                        PassWord,
                        ClientNo,
                        ReportFormID});
            PDFDataCenter = ((byte[])(results[1]));
            PDFDataLab = ((byte[])(results[2]));
            Error = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownLoadReportFormPDFByAccountPassWordAsync(string Account, string PassWord, string ClientNo, string ReportFormID) {
            this.DownLoadReportFormPDFByAccountPassWordAsync(Account, PassWord, ClientNo, ReportFormID, null);
        }
        
        /// <remarks/>
        public void DownLoadReportFormPDFByAccountPassWordAsync(string Account, string PassWord, string ClientNo, string ReportFormID, object userState) {
            if ((this.DownLoadReportFormPDFByAccountPassWordOperationCompleted == null)) {
                this.DownLoadReportFormPDFByAccountPassWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownLoadReportFormPDFByAccountPassWordOperationCompleted);
            }
            this.InvokeAsync("DownLoadReportFormPDFByAccountPassWord", new object[] {
                        Account,
                        PassWord,
                        ClientNo,
                        ReportFormID}, this.DownLoadReportFormPDFByAccountPassWordOperationCompleted, userState);
        }
        
        private void OnDownLoadReportFormPDFByAccountPassWordOperationCompleted(object arg) {
            if ((this.DownLoadReportFormPDFByAccountPassWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownLoadReportFormPDFByAccountPassWordCompleted(this, new DownLoadReportFormPDFByAccountPassWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownloadReportCompletedEventHandler(object sender, DownloadReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string nodeReportFormItem {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public byte[][] FileReport {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string FileType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string xmlWebLisOthers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string ReturnDescription {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownloadReportByBarcodeNoCompletedEventHandler(object sender, DownloadReportByBarcodeNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportByBarcodeNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportByBarcodeNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string WebReportXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownloadReportFormIDListByBarcodeNoCompletedEventHandler(object sender, DownloadReportFormIDListByBarcodeNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormIDListByBarcodeNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormIDListByBarcodeNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormIDList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownloadReportFormIDListByClientBarcodeNoCompletedEventHandler(object sender, DownloadReportFormIDListByClientBarcodeNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportFormIDListByClientBarcodeNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportFormIDListByClientBarcodeNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormIDList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownloadReportByReportFormIDCompletedEventHandler(object sender, DownloadReportByReportFormIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportByReportFormIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportByReportFormIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string WebReportXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownloadReportByPersonIDCompletedEventHandler(object sender, DownloadReportByPersonIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportByPersonIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportByPersonIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] WebReportXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormImageList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownloadReportByBarCodeCompletedEventHandler(object sender, DownloadReportByBarCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReportByBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReportByBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] WebReportXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] ReportFormImageList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void retrieveDocumentViewInfoCompletedEventHandler(object sender, retrieveDocumentViewInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveDocumentViewInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveDocumentViewInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryReportsCountCompletedEventHandler(object sender, QueryReportsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryReportsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryReportsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string BarCodeCounts {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnDescription {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpLoadReportFromBytesCompletedEventHandler(object sender, UpLoadReportFromBytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadReportFromBytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadReportFromBytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpLoadReportFromStrCompletedEventHandler(object sender, UpLoadReportFromStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadReportFromStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadReportFromStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpLoadReportFromBytesNewCompletedEventHandler(object sender, UpLoadReportFromBytesNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadReportFromBytesNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadReportFromBytesNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CheckUpLoadReportFromBytesCompletedEventHandler(object sender, CheckUpLoadReportFromBytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUpLoadReportFromBytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUpLoadReportFromBytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpLoadReportFromBytes_ImageListCompletedEventHandler(object sender, UpLoadReportFromBytes_ImageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadReportFromBytes_ImageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadReportFromBytes_ImageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownLoadReportFormIDCompletedEventHandler(object sender, DownLoadReportFormIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownLoadReportFormIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownLoadReportFormIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string WebReportXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReportUriCompletedEventHandler(object sender, GetReportUriCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportUriCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportUriCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReportUri {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReportFormColumnCompletedEventHandler(object sender, GetReportFormColumnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFormColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFormColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownLoadReportForm_PKICompletedEventHandler(object sender, DownLoadReportForm_PKICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownLoadReportForm_PKICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownLoadReportForm_PKICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ReportItemFull {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ReportMicroFull {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ReportMarrowFull {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public byte[] pdfData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ChangestatusCompletedEventHandler(object sender, ChangestatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangestatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangestatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryReport_PKICompletedEventHandler(object sender, QueryReport_PKICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryReport_PKICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryReport_PKICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ReportFormFull {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DownLoadReportFormPDFByAccountPassWordCompletedEventHandler(object sender, DownLoadReportFormPDFByAccountPassWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownLoadReportFormPDFByAccountPassWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownLoadReportFormPDFByAccountPassWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] PDFDataCenter {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public byte[] PDFDataLab {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
}

#pragma warning restore 1591