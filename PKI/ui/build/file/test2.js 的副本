Ext.onReady(function(){ 
    Ext.QuickTips.init();//初始化后就会激活提示功能
    Ext.Loader.setConfig({enabled: true});//允许动态加载

Ext.Loader.setPath('Ext.zhifangux', getRootPath() + '/ui/zhifangux/CheckList.js');
Ext.ns('Ext.manage');
var test=
Ext.define('Ext.manage.datafilters.rightApp', {
    extend:'Ext.panel.Panel',
    panelType:'Ext.panel.Panel',
    alias:'widget.rightApp',
    title:'',
    moduleRecord:'',
    moduleId:'4744506479377147467',
    moduleOperIndex:'',
    isUseRowFilter:false,
    width:780,
    height:480,
    layout: 'border',
    border:true,
    getAppInfoServerUrl:getRootPath() + '/ConstructionService.svc/CS_UDTO_SearchBTDAppComponentsById',
    /***
     * 角色权限关系表数据查询服务
     * 查询角色id,角色名称,角色时间戳
     * 查询数据过滤条件id,数据过滤条件名称,数据过滤条件时间戳
     * @type String
     */
    getRoleRightServerUrl:getRootPath() +'/RBACService.svc/RBAC_UDTO_SearchRBACRoleRightByHQL?isPlanish=true',
    /***
     * 角色权限关系表数据查询服务的查询字段
     * @type 
     */
    fieldsRoleRight:'RBACRoleRight_Id,RBACRoleRight_DataTimeStamp,RBACRoleRight_RBACRole_Id,RBACRoleRight_RBACRole_DataTimeStamp,RBACRoleRight_RBACRowFilter_Id,RBACRoleRight_RBACRowFilter_DataTimeStamp,RBACRoleRight_RBACRole_CName,RBACRoleRight_RBACRowFilter_CName,RBACRoleRight_RBACModuleOper_Id,RBACRoleRight_RBACModuleOper_DataTimeStamp',
    /***
     * 角色权限更新服务
     * 更新行过滤条件关系
     * @type 
     */
    editRoleRightServerUrl:getRootPath() +'/RBACService.svc/RBAC_UDTO_UpdateRBACRoleRightByField',
    editfieldsRoleRight:'Id,RBACRowFilter',
    editfieldsAllRoleRight:'Id,RBACRowFilter,RBACRole,RBACModuleOper',
    deleteRoleRightUrl:getRootPath() + '/RBACService.svc/RBAC_UDTO_DelRBACRoleRight',
    /***
     * 删除行过滤条件
     * @type 
     */
    deleteRBACRowFilterUrl:getRootPath() + '/RBACService.svc/RBAC_UDTO_DelRBACRowFilter',
    comNum:0,
    afterRender:function() {
        var me = this;
        me.callParent(arguments);
        alert(me.moduleId);
        if(me.moduleId && me.moduleId != ""){me.load(me.moduleId);}
        
        if (Ext.typeOf(me.callback) == 'function') {
            me.callback(me);
        }
        me.initLink();
    },
    /***
     * 对外分开,加载表单及模块操作列表信息
     * @param {}moduleId
     */
    load:function(moduleId) {
        var me=this;
        if(moduleId!=""){
            //var moduleId=moduleId;
            var hqlWhere='rbacmoduleoper.RBACModule.Id='+moduleId;
            me.moduleId=moduleId;
            var moLists=me.getmoduleOperLists();
            if(moLists){
                moLists.selectIndex=0;
                moLists.load(hqlWhere);
            }
            var moList=me.getmoduleOperLists();
            var moRecords = moList.getSelectionModel().getSelection();
            var moRecord = null;
            if (moRecords && moRecords.length > 0) {
                moRecord = moRecords[0];
            } else {
                moRecord = null;
            }
            if(moRecord!=null){
                //是否开启数据权限
                var form=me.getdatafiltersForm();
                var useRowFilter=''+moRecord.get('RBACModuleOper_UseRowFilter');
                if (useRowFilter&& useRowFilter=='true') {// 
                   if(form){
                        form.setisUseRowFilter(true);
                        me.isUseRowFilter=true;
                   }
                }else{
                    if(form){
                        form.setisUseRowFilter(false);
                        me.isUseRowFilter=false;
                    }
                }
            }
            
        }
    },
    initLink:function() {
        var me = this;
        //1.左区域为模块树连动中间模块操作列表
        var moduleOper=me.getmoduleOperLists();
        //行过滤条件角色树
        var rdfTree=me.getroleDataFiltersTree();
        //2.中间区域为模块操作列表连动数据过滤条件角色树
        if(moduleOper){
            moduleOper.on({
                select:function( rowModel,record, index, eOpts ){
                    if(record){
                        me.moduleOperIndex=index;
                        moduleOper.selectIndex=index;
                        var id=record.get('RBACModuleOper_Id');
                        me.moduleOperId=id;
                        //是否开启数据权限
                        var form=me.getdatafiltersForm();
                        var useRowFilter=''+record.get('RBACModuleOper_UseRowFilter');
                        if (useRowFilter&& useRowFilter=='true') {// 
                           if(form){
                                form.setisUseRowFilter(true);
                                me.isUseRowFilter=true;
                           }
                        }else{
                            if(form){
                                form.setisUseRowFilter(false);
                                me.isUseRowFilter=false;
                            }
                        }
                        if(rdfTree){
                            rdfTree.load(id);
                        }
                    }
                },
                itemclick:function(grid, record,  item,  index,  e,  eOpts ){
                    if(record){
                        me.moduleOperIndex=index;
                        var id=record.get('RBACModuleOper_Id');
                        me.moduleOperId=id;
                        if(rdfTree){
                            rdfTree.load(id);
                        }
                        //是否开启数据权限
                        var form=me.getdatafiltersForm();
                        var useRowFilter=''+record.get('RBACModuleOper_UseRowFilter');
                        if (useRowFilter&& useRowFilter=='true') {// 
                           if(form){
                                form.setisUseRowFilter(true);
                                me.isUseRowFilter=true;
                           }
                        }else{
                            if(form){
                                form.setisUseRowFilter(false);
                                me.isUseRowFilter=false;
                            }
                        }
                        
                    }
                }
            });
        }
        
        //3.表单连动代码
        var form=me.getdatafiltersForm();
        if(form){
        form.on({//是否开启数据权限
            changeUseRowFilter:function(com, newValue, oldValue, eOpts ){
                me.isUseRowFilter=newValue;
                var editServerUrl=getRootPath() + '/'+'RBACService.svc/RBAC_UDTO_UpdateRBACModuleOperByField';
                var editfields='Id,UseRowFilter';
                var moList=me.getmoduleOperLists();
                var moRecords = moList.getSelectionModel().getSelection();
                var moRecord = null;
                if (moRecords && moRecords.length > 0) {
                    moRecord = moRecords[0];
                } else {
                    moRecord = null;
                }
                if(moRecord!=null){
                    var moduleOperId=moRecord.get('RBACModuleOper_Id');
                    var obj={
                    'Id':moduleOperId,
                    'UseRowFilter':''+newValue
                    };
                    var obj2={'entity':obj,'fields':editfields};
                    var params = Ext.JSON.encode(obj2);
                    var c = function(text){
                    var result = Ext.JSON.decode(text);
                        if(result.success){
                        }
                    }
                    //util-POST方式与后台交互
                    var defaultPostHeader='application/json';
                    var async=false;
                    postToServer(editServerUrl,params,c,defaultPostHeader,async);
                    moRecord.set('RBACModuleOper_UseRowFilter',''+newValue);
                    moRecord.commit();
                }
               
            }
        });
        
        var btnCom=form.getComponent('btnAddDatafilters');
        if(btnCom){
             //新增过滤条件按钮
            btnCom.on({
                click:function(com, e, eOpts ){
                    me.openAppEditWin('add',-1);
                }
            });
        }
        }
        //4.行过滤条件角色树:分配角色列显示处理
        if(rdfTree){
            rdfTree.on({
                //查看某角色下的员工角色数据
                showClick:function(grid,rowIndex,colIndex,item,e,record){
                    if(record&&record!=null){
                       //objectType为RBACRowFilter是数据过滤条件节点
                        var objectType=''+record.get('objectType');
                        if(objectType=='RBACRole'){
                            var tid=record.get('tid');//角色
                            var roleCName=record.get('text');//角色名称
                            var hqlWhere='rbacemproles.RBACRole.Id='+tid;
                            me.openRoleListShowWin(hqlWhere,roleCName);
                        }else if(objectType=='RBACRowFilter'){
                            Ext.Msg.alert('提示','请选择角色查看');
                        }
                    }
                },
                editClick:function(grid,rowIndex,colIndex,item,e,record){
                    if(record&&record!=null){
                        //objectType为RBACRowFilter是数据过滤条件节点
                        var objectType=''+record.get('objectType');
                        if(objectType=='RBACRowFilter'){
                            var appId=record.get('tid');//
                            me.openAppEditWin('edit',appId);
                        }else{
                            Ext.Msg.alert('提示','请选择数据过滤条件');
                        }
                    }
                },
                deleteClick:function( grid,rowIndex,colIndex,item,e,record){
                    var moRecords = moduleOper.getSelectionModel().getSelection();
                    var moRecord = null;
                    if (moRecords && moRecords.length > 0) {
                        moRecord = moRecords[0];
                    } else {
                        moRecord = null;
                    }
                    
                    if(record&&record!=null){
                        var roleId=record.get('tid');//节点id值,角色id
                        var rowId=record.get('pid');//节点id值,角色的数据过滤行条件id
                        //objectType为RBACRowFilter是数据过滤条件节点
                        var objectType=''+record.get('objectType');
                        var moduleOperId=moRecord.get('RBACModuleOper_Id');
                        var obj={};
                        //角色节点
                        if(objectType=='RBACRole'){
                            obj={moduleOperId:moduleOperId,rowId:rowId,roleId:roleId};
                            //如果是角色节点,需要更新角色权限关系信息的数据过滤行条件id为空
                            var list=me.getRoleRightLists(obj,'edit');
                            Ext.Array.each(list, function(model) {
                                var id=model['RBACRoleRight_Id'];
                                var obj={
                                    Id:id
                                }
                                me.updateRoleRight(obj,'part');
                            });
                            //更新行过滤--角色树
                            if(rdfTree){
                                rdfTree.load(moduleOperId);
                            }
                            
                        }else if(objectType=='RBACRowFilter'){//父节点
                            rowId=record.get('tid');//节点id值,角色的数据过滤行条件id
                            var obj2={moduleOperId:moduleOperId,rowId:rowId,roleId:null};
                            //1.如果是父节点,需要更新模块操作的相关数据过滤行条件id为空,并直接删除角色权限关系信息
                            var list=me.getRoleRightLists(obj2,'delete');

                            //2.更新该行过滤条件在模块操作的默认行过滤条件为空
                            //模块操作数据对象
                            var RBACModuleOper={"Id":moduleOperId};
                            var editServerUrl=getRootPath() + '/'+'RBACService.svc/RBAC_UDTO_UpdateRBACModuleOperByField';
                            var editfields='Id,RBACRowFilter';
                            
                            var obj2={'entity':RBACModuleOper,'fields':editfields};
                            var params = Ext.JSON.encode(obj2);
                            //util-POST方式与后台交互
                            var defaultPostHeader='application/json';
                            var async=false;
                            postToServer(editServerUrl,params,null,defaultPostHeader,async);
        
                            //3.删除完角色权限的行过滤条件的关系后
                            Ext.Msg.confirm('提示','确定要删除吗？',function(button){
                                if(button == 'yes'){
                                   Ext.Array.each(list, function(model) {
                                    id=model['RBACRoleRight_Id'];
                                    me.deleteRoleRight(id);
                                 });
                                //4.删除完角色权限的行过滤条件的关系后,删除行过滤条件数据
                                me.deleteRBACRowFilter(rowId);
                                //5.更新行过滤--角色树
                                if(rdfTree){
                                    rdfTree.load(moduleOperId);
                                } 
                               }
                            });
                            
                        }
                    } 
                },
                itemdblclick:function(grid, record,  item,  index,  e,  eOpts ){
                    if(record&&record!=null){
                        var objectType=''+record.get('objectType');
                        //角色节点
                        if(objectType=='RBACRole'){
                            var tid=record.get('tid');//角色
                            var roleCName=record.get('text');//角色
                            var hqlWhere='rbacemproles.RBACRole.Id='+tid;
                            if(moduleOper){
                                me.openRoleListShowWin(hqlWhere,roleCName);
                            }
                        }else if(objectType=='RBACRowFilter'){
                            var appId=record.get('tid');//
                            me.openAppEditWin('edit',appId);
                        }
                    }
                }
            });
        }
    },
    /***
     * 删除角色权限数据对象
     */
    deleteRoleRight:function(id){
        var me=this;
        var result=true;
        var deleteServerUrl=me.deleteRoleRightUrl+'?id='+id;
        Ext.Ajax.defaultPostHeader = 'application/json';
        Ext.Ajax.request({
            url:deleteServerUrl,
            async:false,//非异步
            method:'GET',
            success:function(response,opts){
                result=true;
            },
            failure : function(response,options){
                result=true;
            }
        });
        return result;
    },
    /***
     * 删除行过滤条件数据对象
     */
    deleteRBACRowFilter:function(id){
        var me=this;
        var deleteServerUrl=me.deleteRBACRowFilterUrl+'?id='+id;
        Ext.Ajax.defaultPostHeader = 'application/json';
        Ext.Ajax.request({
            url:deleteServerUrl,
            async:false,//非异步
            method:'GET',
          success:function(response,opts){
              Ext.Msg.alert('提示','删除行过滤条件成功');
          },
          failure : function(response,options){
              Ext.Msg.alert('提示','删除行过滤条件失败');
          }
        });
    },
    /***
     * 更新角色权限数据对象
     */
    updateRoleRight:function(obj,type){
        var me=this;
        var editServerUrl=me.editRoleRightServerUrl;
        var editfields=me.editfieldsRoleRight;
        if(type=='part'){
            editfields=me.editfieldsRoleRight;
        }else if(type=='all'){
            editfields=me.editfieldsAllRoleRight;
        }
        var obj2={'entity':obj,'fields':editfields};
        var params = Ext.JSON.encode(obj2);
        var callback=function(responseText){   
            var result = Ext.JSON.decode(responseText);
            var isSuccess=result.success;
        
         };
        //util-POST方式与后台交互
        var defaultPostHeader='application/json';
        var async=false;
        postToServer(editServerUrl,params,callback,defaultPostHeader,async);
    },
    /***
     * 获取角色权限数据集
     */
    getRoleRightLists:function(obj,type){
        var me=this;
        var roleRightLists=[];
        var hqlWhere='';
        if(type=='delete'){
            hqlWhere='rbacroleright.RBACModuleOper.Id='+obj.moduleOperId+ ' and rbacroleright.RBACRowFilter.Id='+obj.rowId;
        }else if(type=='edit'){
            hqlWhere='rbacroleright.RBACModuleOper.Id='+obj.moduleOperId+ ' and rbacroleright.RBACRowFilter.Id='+obj.rowId;
            hqlWhere=hqlWhere+(' and rbacroleright.RBACRole.Id='+obj.roleId);
        }
        var myUrl=me.getRoleRightServerUrl+'&fields='+me.fieldsRoleRight+'&where='+hqlWhere;
        //查询数据过滤条件行记录
        Ext.Ajax.defaultPostHeader = 'application/json';
        Ext.Ajax.request({
            async:false,//非异步
            url:myUrl,
            method:'GET',
            success:function(response,opts){
                var result = Ext.JSON.decode(response.responseText);
                if(result.success){
                var ResultDataValue = {count:0,list:[]};
                if(result['ResultDataValue'] && result['ResultDataValue'] != ""){
                    ResultDataValue = Ext.JSON.decode(result['ResultDataValue']);
                    roleRightLists=ResultDataValue.list;
                   
                }
                var count = ResultDataValue['count'];
                }else{
                    roleRightLists=[];
                }
            },
            failure : function(response,options){
                 roleRightLists=[];
            }
        });
        return roleRightLists;
    },
    /**
     * 打开某角色下的员工信息列表应用窗口
     * @private
     * @param {} title
     * @param {} ClassCode
     * @param {} id
     */
    openRoleListShowWin:function(hqlWhere,roleCName){
        var me = this;
        var panel = 'Ext.manage.datafilters.empRolesLists';
        var maxHeight = document.body.clientHeight*0.98;
        var maxWidth = document.body.clientWidth*0.98;
        var title=""+roleCName+"的员工信息";
        var win = Ext.create(panel,{
            id:-1,
            title:title,
            internalWhere:'',
            externalWhere:hqlWhere,
            maxWidth:maxWidth,
            autoScroll:true,
            modal:true,//模态
            floating:true,//漂浮
            closable:true,//有关闭按钮
            resizable:true,//可变大小
            draggable:true//可移动
        });
        
        if(win.height > maxHeight){
            win.height = maxHeight;
        }
        //解决chrome浏览器的滚动条问题
        var callback = function(){
            win.hide();
            win.show();
        }
        win.show(null,callback);
        win.load(hqlWhere);
    },
    /**
     * 打开数据过滤条件设置页面
     * @private
     * @param {} appType
     * @param {} id
     */
    openAppEditWin:function(appType,id){
        var me = this;
        Ext.Loader.setConfig({enabled:true});
        Ext.Loader.setPath('Ext.manage.datafilters.setForm', getRootPath() + '/ui/manage/class/datafilters/setForm.js');
        Ext.Loader.setPath('Ext.manage.datafilters.roleChooseLists', getRootPath() + '/ui/manage/class/datafilters/roleChooseLists.js');
        Ext.Loader.setPath('Ext.manage.datafilters.setDatafiltersApp', getRootPath() + '/ui/manage/class/datafilters/setDatafiltersApp.js');
        
        //应用类型信息
        var appTypeInfo ='';
        var title ='';
        var panel = 'Ext.manage.datafilters.setDatafiltersApp';
        var roleLists=[];
        var moduleOperId='';
        //模块操作选中行号
        var num=0;
        //模块操作的行过滤依据对象
        var objectName='';
        var objectCName='数据对象';
        var setformTitle='';
        var appId = -1;//
        //模块操作的默认数据过滤条件的Id
        var defaultRowFilterId='';
        var mdtRecord=me.moduleRecord;
        if(mdtRecord&&mdtRecord!=null){
            setformTitle ='　　　　　　　所属模块:'+mdtRecord.get('text');
        }
        var moduleOper=me.getmoduleOperLists();
        var records=moduleOper.getSelectionModel().getSelection();
        //行过滤条件角色树
        var filtersTree=me.getroleDataFiltersTree();
        var record=null;
        if(records&&records.length>0){
            record=records[0];
            setformTitle =setformTitle+'>>所属模块操作:'+record.get('RBACModuleOper_CName');
            defaultRowFilterId=''+record.get('RBACModuleOper_RBACRowFilter_Id');
            moduleOperId=record.get('RBACModuleOper_Id');
            objectName=record.get('RBACModuleOper_BTDAppComponentsOperate_RowFilterBase');
            //objectName='BProvince';//测试数据对象
            if(objectName==""||objectName==null){
                Ext.Msg.alert('提示','当前模块操作没有行过滤条件依据对象');
                return ;
            }else{
            //模块操作选中行记录
            if(id && id > 0){
                title = "修改数据过滤条件>>";
                //数据过滤条件行记录的Id
                appId = id;
            }else{
                title = "新增数据过滤条件>>";
                appId =-1;
            }
            var maxWidth = document.body.clientWidth*0.92;
            var maxHeight = document.body.clientHeight*0.96;
            var win = Ext.create(panel,{
                title:title,
                setformTitle:setformTitle,
                width:maxWidth,
                height:maxHeight,
                maxWidth:maxWidth,
                maxHeight:maxHeight,
                layout:'border',
                defaultRowFilterId:defaultRowFilterId,//模块操作的默认数据过滤条件的Id
                moduleOperId:moduleOperId,//模块操作id
                appId:appId,//数据过滤条件的行记录ID
                filtersTree:filtersTree,//行过滤条件角色树
                moduleOperSelect:record,//模块操作选中行记录
                objectName:objectName,//objectName数据对象
                objectCName:objectCName,
                appType:appType,
                modal:true,//模态
                resizable:false,//可变大小
                floating:true,//漂浮
                closable:true,//有关闭按钮
                draggable:true//可移动
            }).show();
            //保存监听
            win.on({
                //更新模块操作列表后事件
                updateModuleOperClick:function(){
                    var moduleOper=me.getmoduleOperLists();
                    var hqlWhere2='rbacmoduleoper.RBACModule.Id='+me.moduleId;
                    if(moduleOper){
                        moduleOper.load(hqlWhere2);
                    }
                },
                comeBackClick:function(){
                    win.close();
                },
                close:function(){
                    filtersTree.load(me.moduleOperId);
                }
            });
            }
        }else{
            Ext.Msg.alert('提示','请先选中模块操作数据行');
        }
    },
    /***
     * 获取右区域应用的模块操作列表
     */
    getmoduleOperLists:function(){
        var me=this;
        var com=me.getComponent('moduleOperLists');
        return com;
    },
    /***
     * 获取右区域应用的右上表单
     */
    getdatafiltersForm:function(){
        var me=this;
        var com=me.getComponent('right').getComponent('datafiltersForm');
        return com;
    },
    /***
     * 获取右区域应用的右区域的下数据过滤条件角色树
     */
    getroleDataFiltersTree:function(){
        var me=this;
        var com=me.getComponent('right').getComponent('roleDataFiltersTree');
        return com;
    },
    createItems:function() {
        var me = this;

        var moduleOperLists=Ext.create('Ext.manage.datafilters.moduleOperLists',{
            width:332,
            height:311,
            header:true,
            xtype:moduleOperLists,
            itemId:'moduleOperLists',
            name:'moduleOperLists',
            title:'模块操作列表',
            region:'west',
            split:true,
            collapsible:true,
            collapsed:false,
            border:false
        });
        var datafiltersForm=Ext.create('Ext.manage.datafilters.datafiltersForm',{
                itemId:'datafiltersForm',
                name:'datafiltersForm',
                header:false,
                height:40,
                region:'north',
                split:true,
                collapsible:false,
                collapsed:false,
                border:false
        });
        var roleDataFiltersTree=Ext.create('Ext.manage.datafilters.roleDataFiltersTree',{
                name:'roleDataFiltersTree',
                itemId:'roleDataFiltersTree',
                header:false,
                region:'center',
                split:true,
                collapsible:false,
                collapsed:false,
                border:false,
                layout:'fit'
        });
        var appInfos = [moduleOperLists,
            {
            //右数据过滤条件APP
            xtype:'panel',
            name:'right',
            autoScroll:true,
            itemId:'right',
            title:'数据过滤条件&角色树',
            region:'center',
            split:true,
            collapsible:true,
            items:[datafiltersForm,roleDataFiltersTree]  
        }];     
        return appInfos;
    },
    /**
     * 初始化
     */
    initComponent:function(){
        var me = this;
        Ext.Loader.setConfig({enabled:true});
        Ext.Loader.setPath('Ext.manage.datafilters.empRolesLists', getRootPath() + '/ui/manage/class/datafilters/empRolesLists.js');
        Ext.Loader.setPath('Ext.manage.datafilters.moduleOperLists', getRootPath() + '/ui/manage/class/datafilters/moduleOperLists.js');
        Ext.Loader.setPath('Ext.manage.datafilters.datafiltersForm', getRootPath() + '/ui/manage/class/datafilters/datafiltersForm.js');
        Ext.Loader.setPath('Ext.manage.datafilters.roleDataFiltersTree', getRootPath() + '/ui/manage/class/datafilters/roleDataFiltersTree.js');
        Ext.Loader.setPath('Ext.manage.datafilters.setDatafiltersApp', getRootPath() + '/ui/manage/class/datafilters/setDatafiltersApp.js');
        
        me.items=me.createItems();
        me.callParent(arguments);
    },
     beforeRender:function() {
        var me = this;
        me.callParent(arguments);
    }
});

//总体布局
    Ext.create('Ext.container.Viewport',{
        items:test
    });
});