//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace ReferenceServiceDemo.HRPService
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "FeiyiServiceServiceSoapBinding", Namespace = "http://services.passages.feiyi.com.cn/")]
    public partial class FeiyiServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback esbEntranceOperationCompleted;

        private System.Threading.SendOrPostCallback getHisPatientInfoOperationCompleted;

        private System.Threading.SendOrPostCallback RefundMtrlExpFeeOperationCompleted;

        private System.Threading.SendOrPostCallback SyncMtrlPriceToHisOperationCompleted;

        private System.Threading.SendOrPostCallback getKindlyqualificationInfoOperationCompleted;

        private System.Threading.SendOrPostCallback ChageMtrlExpFeeListOperationCompleted;

        private System.Threading.SendOrPostCallback GetPriceListFromHisOperationCompleted;

        private System.Threading.SendOrPostCallback doAddMtrlDictOperationCompleted;

        private System.Threading.SendOrPostCallback PriceListVSOperationCompleted;

        private System.Threading.SendOrPostCallback doAddImportInfoOperationCompleted;

        private System.Threading.SendOrPostCallback MtrlPriceListOperationCompleted;

        private System.Threading.SendOrPostCallback PushPurchasePlanOperationCompleted;

        private System.Threading.SendOrPostCallback SyncMtrlImportInfoForGysOperationCompleted;

        private System.Threading.SendOrPostCallback SendOrderToGYOperationCompleted;

        private System.Threading.SendOrPostCallback HisExpChargingOperationCompleted;

        private System.Threading.SendOrPostCallback SyncMtrlPriceToSpdOperationCompleted;

        private System.Threading.SendOrPostCallback ExpRegConfirmOperationCompleted;

        private System.Threading.SendOrPostCallback GetStockInfoOperationCompleted;

        private System.Threading.SendOrPostCallback MtrlExpHisChargeProcedureOperationCompleted;

        private System.Threading.SendOrPostCallback ExtractHisSurgeryInfoOperationCompleted;

        private System.Threading.SendOrPostCallback doAcceptImportAndExportInfoOperationCompleted;

        private System.Threading.SendOrPostCallback getExpInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetHisDeptInfoOperationCompleted;

        private System.Threading.SendOrPostCallback SyncMtrlStockToHisOperationCompleted;

        private System.Threading.SendOrPostCallback SyncMtrlImportInfoOperationCompleted;

        private System.Threading.SendOrPostCallback MtrlDeptRefundOperationCompleted;

        private System.Threading.SendOrPostCallback ChageMtrlExpFeeOperationCompleted;

        private System.Threading.SendOrPostCallback InitializationOfPriceListOperationOperationCompleted;

        private System.Threading.SendOrPostCallback getExportInfoOperationCompleted;

        private System.Threading.SendOrPostCallback HisExpConfirmOperationCompleted;

        private System.Threading.SendOrPostCallback DoUpdateStatusOperationCompleted;

        private System.Threading.SendOrPostCallback FlusheMtrlExpFeeOperationCompleted;

        private System.Threading.SendOrPostCallback MtrlExpVerificationOperationCompleted;

        private System.Threading.SendOrPostCallback syncReturnToSupplierOperationCompleted;

        private System.Threading.SendOrPostCallback UniversalInterfaceOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateDeliveryStateToNPOperationCompleted;

        private System.Threading.SendOrPostCallback MtrlExportOperationCompleted;

        private System.Threading.SendOrPostCallback doAddExportInfoOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public FeiyiServiceService()
        {
            this.Url = "http://10.10.10.90:8080/feiyi_passages/services/FeiyiServices";
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event esbEntranceCompletedEventHandler esbEntranceCompleted;

        /// <remarks/>
        public event getHisPatientInfoCompletedEventHandler getHisPatientInfoCompleted;

        /// <remarks/>
        public event RefundMtrlExpFeeCompletedEventHandler RefundMtrlExpFeeCompleted;

        /// <remarks/>
        public event SyncMtrlPriceToHisCompletedEventHandler SyncMtrlPriceToHisCompleted;

        /// <remarks/>
        public event getKindlyqualificationInfoCompletedEventHandler getKindlyqualificationInfoCompleted;

        /// <remarks/>
        public event ChageMtrlExpFeeListCompletedEventHandler ChageMtrlExpFeeListCompleted;

        /// <remarks/>
        public event GetPriceListFromHisCompletedEventHandler GetPriceListFromHisCompleted;

        /// <remarks/>
        public event doAddMtrlDictCompletedEventHandler doAddMtrlDictCompleted;

        /// <remarks/>
        public event PriceListVSCompletedEventHandler PriceListVSCompleted;

        /// <remarks/>
        public event doAddImportInfoCompletedEventHandler doAddImportInfoCompleted;

        /// <remarks/>
        public event MtrlPriceListCompletedEventHandler MtrlPriceListCompleted;

        /// <remarks/>
        public event PushPurchasePlanCompletedEventHandler PushPurchasePlanCompleted;

        /// <remarks/>
        public event SyncMtrlImportInfoForGysCompletedEventHandler SyncMtrlImportInfoForGysCompleted;

        /// <remarks/>
        public event SendOrderToGYCompletedEventHandler SendOrderToGYCompleted;

        /// <remarks/>
        public event HisExpChargingCompletedEventHandler HisExpChargingCompleted;

        /// <remarks/>
        public event SyncMtrlPriceToSpdCompletedEventHandler SyncMtrlPriceToSpdCompleted;

        /// <remarks/>
        public event ExpRegConfirmCompletedEventHandler ExpRegConfirmCompleted;

        /// <remarks/>
        public event GetStockInfoCompletedEventHandler GetStockInfoCompleted;

        /// <remarks/>
        public event MtrlExpHisChargeProcedureCompletedEventHandler MtrlExpHisChargeProcedureCompleted;

        /// <remarks/>
        public event ExtractHisSurgeryInfoCompletedEventHandler ExtractHisSurgeryInfoCompleted;

        /// <remarks/>
        public event doAcceptImportAndExportInfoCompletedEventHandler doAcceptImportAndExportInfoCompleted;

        /// <remarks/>
        public event getExpInfoCompletedEventHandler getExpInfoCompleted;

        /// <remarks/>
        public event GetHisDeptInfoCompletedEventHandler GetHisDeptInfoCompleted;

        /// <remarks/>
        public event SyncMtrlStockToHisCompletedEventHandler SyncMtrlStockToHisCompleted;

        /// <remarks/>
        public event SyncMtrlImportInfoCompletedEventHandler SyncMtrlImportInfoCompleted;

        /// <remarks/>
        public event MtrlDeptRefundCompletedEventHandler MtrlDeptRefundCompleted;

        /// <remarks/>
        public event ChageMtrlExpFeeCompletedEventHandler ChageMtrlExpFeeCompleted;

        /// <remarks/>
        public event InitializationOfPriceListOperationCompletedEventHandler InitializationOfPriceListOperationCompleted;

        /// <remarks/>
        public event getExportInfoCompletedEventHandler getExportInfoCompleted;

        /// <remarks/>
        public event HisExpConfirmCompletedEventHandler HisExpConfirmCompleted;

        /// <remarks/>
        public event DoUpdateStatusCompletedEventHandler DoUpdateStatusCompleted;

        /// <remarks/>
        public event FlusheMtrlExpFeeCompletedEventHandler FlusheMtrlExpFeeCompleted;

        /// <remarks/>
        public event MtrlExpVerificationCompletedEventHandler MtrlExpVerificationCompleted;

        /// <remarks/>
        public event syncReturnToSupplierCompletedEventHandler syncReturnToSupplierCompleted;

        /// <remarks/>
        public event UniversalInterfaceCompletedEventHandler UniversalInterfaceCompleted;

        /// <remarks/>
        public event UpdateDeliveryStateToNPCompletedEventHandler UpdateDeliveryStateToNPCompleted;

        /// <remarks/>
        public event MtrlExportCompletedEventHandler MtrlExportCompleted;

        /// <remarks/>
        public event doAddExportInfoCompletedEventHandler doAddExportInfoCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.passages.feiyi.com.cn/esbEntrance", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string esbEntrance(string callType, string xmlMessage)
        {
            object[] results = this.Invoke("esbEntrance", new object[] {
                        callType,
                        xmlMessage});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void esbEntranceAsync(string callType, string xmlMessage)
        {
            this.esbEntranceAsync(callType, xmlMessage, null);
        }

        /// <remarks/>
        public void esbEntranceAsync(string callType, string xmlMessage, object userState)
        {
            if ((this.esbEntranceOperationCompleted == null))
            {
                this.esbEntranceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnesbEntranceOperationCompleted);
            }
            this.InvokeAsync("esbEntrance", new object[] {
                        callType,
                        xmlMessage}, this.esbEntranceOperationCompleted, userState);
        }

        private void OnesbEntranceOperationCompleted(object arg)
        {
            if ((this.esbEntranceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.esbEntranceCompleted(this, new esbEntranceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getHisPatientInfo(string arg0)
        {
            object[] results = this.Invoke("getHisPatientInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getHisPatientInfoAsync(string arg0)
        {
            this.getHisPatientInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void getHisPatientInfoAsync(string arg0, object userState)
        {
            if ((this.getHisPatientInfoOperationCompleted == null))
            {
                this.getHisPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHisPatientInfoOperationCompleted);
            }
            this.InvokeAsync("getHisPatientInfo", new object[] {
                        arg0}, this.getHisPatientInfoOperationCompleted, userState);
        }

        private void OngetHisPatientInfoOperationCompleted(object arg)
        {
            if ((this.getHisPatientInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHisPatientInfoCompleted(this, new getHisPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string RefundMtrlExpFee(string arg0)
        {
            object[] results = this.Invoke("RefundMtrlExpFee", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void RefundMtrlExpFeeAsync(string arg0)
        {
            this.RefundMtrlExpFeeAsync(arg0, null);
        }

        /// <remarks/>
        public void RefundMtrlExpFeeAsync(string arg0, object userState)
        {
            if ((this.RefundMtrlExpFeeOperationCompleted == null))
            {
                this.RefundMtrlExpFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundMtrlExpFeeOperationCompleted);
            }
            this.InvokeAsync("RefundMtrlExpFee", new object[] {
                        arg0}, this.RefundMtrlExpFeeOperationCompleted, userState);
        }

        private void OnRefundMtrlExpFeeOperationCompleted(object arg)
        {
            if ((this.RefundMtrlExpFeeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundMtrlExpFeeCompleted(this, new RefundMtrlExpFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SyncMtrlPriceToHis(string arg0)
        {
            object[] results = this.Invoke("SyncMtrlPriceToHis", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SyncMtrlPriceToHisAsync(string arg0)
        {
            this.SyncMtrlPriceToHisAsync(arg0, null);
        }

        /// <remarks/>
        public void SyncMtrlPriceToHisAsync(string arg0, object userState)
        {
            if ((this.SyncMtrlPriceToHisOperationCompleted == null))
            {
                this.SyncMtrlPriceToHisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncMtrlPriceToHisOperationCompleted);
            }
            this.InvokeAsync("SyncMtrlPriceToHis", new object[] {
                        arg0}, this.SyncMtrlPriceToHisOperationCompleted, userState);
        }

        private void OnSyncMtrlPriceToHisOperationCompleted(object arg)
        {
            if ((this.SyncMtrlPriceToHisCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncMtrlPriceToHisCompleted(this, new SyncMtrlPriceToHisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getKindlyqualificationInfo(string arg0)
        {
            object[] results = this.Invoke("getKindlyqualificationInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getKindlyqualificationInfoAsync(string arg0)
        {
            this.getKindlyqualificationInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void getKindlyqualificationInfoAsync(string arg0, object userState)
        {
            if ((this.getKindlyqualificationInfoOperationCompleted == null))
            {
                this.getKindlyqualificationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKindlyqualificationInfoOperationCompleted);
            }
            this.InvokeAsync("getKindlyqualificationInfo", new object[] {
                        arg0}, this.getKindlyqualificationInfoOperationCompleted, userState);
        }

        private void OngetKindlyqualificationInfoOperationCompleted(object arg)
        {
            if ((this.getKindlyqualificationInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKindlyqualificationInfoCompleted(this, new getKindlyqualificationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string ChageMtrlExpFeeList(string arg0)
        {
            object[] results = this.Invoke("ChageMtrlExpFeeList", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ChageMtrlExpFeeListAsync(string arg0)
        {
            this.ChageMtrlExpFeeListAsync(arg0, null);
        }

        /// <remarks/>
        public void ChageMtrlExpFeeListAsync(string arg0, object userState)
        {
            if ((this.ChageMtrlExpFeeListOperationCompleted == null))
            {
                this.ChageMtrlExpFeeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChageMtrlExpFeeListOperationCompleted);
            }
            this.InvokeAsync("ChageMtrlExpFeeList", new object[] {
                        arg0}, this.ChageMtrlExpFeeListOperationCompleted, userState);
        }

        private void OnChageMtrlExpFeeListOperationCompleted(object arg)
        {
            if ((this.ChageMtrlExpFeeListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChageMtrlExpFeeListCompleted(this, new ChageMtrlExpFeeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetPriceListFromHis(string arg0)
        {
            object[] results = this.Invoke("GetPriceListFromHis", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetPriceListFromHisAsync(string arg0)
        {
            this.GetPriceListFromHisAsync(arg0, null);
        }

        /// <remarks/>
        public void GetPriceListFromHisAsync(string arg0, object userState)
        {
            if ((this.GetPriceListFromHisOperationCompleted == null))
            {
                this.GetPriceListFromHisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceListFromHisOperationCompleted);
            }
            this.InvokeAsync("GetPriceListFromHis", new object[] {
                        arg0}, this.GetPriceListFromHisOperationCompleted, userState);
        }

        private void OnGetPriceListFromHisOperationCompleted(object arg)
        {
            if ((this.GetPriceListFromHisCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceListFromHisCompleted(this, new GetPriceListFromHisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string doAddMtrlDict(string arg0)
        {
            object[] results = this.Invoke("doAddMtrlDict", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void doAddMtrlDictAsync(string arg0)
        {
            this.doAddMtrlDictAsync(arg0, null);
        }

        /// <remarks/>
        public void doAddMtrlDictAsync(string arg0, object userState)
        {
            if ((this.doAddMtrlDictOperationCompleted == null))
            {
                this.doAddMtrlDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddMtrlDictOperationCompleted);
            }
            this.InvokeAsync("doAddMtrlDict", new object[] {
                        arg0}, this.doAddMtrlDictOperationCompleted, userState);
        }

        private void OndoAddMtrlDictOperationCompleted(object arg)
        {
            if ((this.doAddMtrlDictCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doAddMtrlDictCompleted(this, new doAddMtrlDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string PriceListVS(string arg0)
        {
            object[] results = this.Invoke("PriceListVS", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void PriceListVSAsync(string arg0)
        {
            this.PriceListVSAsync(arg0, null);
        }

        /// <remarks/>
        public void PriceListVSAsync(string arg0, object userState)
        {
            if ((this.PriceListVSOperationCompleted == null))
            {
                this.PriceListVSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPriceListVSOperationCompleted);
            }
            this.InvokeAsync("PriceListVS", new object[] {
                        arg0}, this.PriceListVSOperationCompleted, userState);
        }

        private void OnPriceListVSOperationCompleted(object arg)
        {
            if ((this.PriceListVSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PriceListVSCompleted(this, new PriceListVSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doAddImportInfo", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string doAddImportInfo(string arg0)
        {
            object[] results = this.Invoke("doAddImportInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void doAddImportInfoAsync(string arg0)
        {
            this.doAddImportInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void doAddImportInfoAsync(string arg0, object userState)
        {
            if ((this.doAddImportInfoOperationCompleted == null))
            {
                this.doAddImportInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddImportInfoOperationCompleted);
            }
            this.InvokeAsync("doAddImportInfo", new object[] {
                        arg0}, this.doAddImportInfoOperationCompleted, userState);
        }

        private void OndoAddImportInfoOperationCompleted(object arg)
        {
            if ((this.doAddImportInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doAddImportInfoCompleted(this, new doAddImportInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string MtrlPriceList(string arg0)
        {
            object[] results = this.Invoke("MtrlPriceList", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MtrlPriceListAsync(string arg0)
        {
            this.MtrlPriceListAsync(arg0, null);
        }

        /// <remarks/>
        public void MtrlPriceListAsync(string arg0, object userState)
        {
            if ((this.MtrlPriceListOperationCompleted == null))
            {
                this.MtrlPriceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMtrlPriceListOperationCompleted);
            }
            this.InvokeAsync("MtrlPriceList", new object[] {
                        arg0}, this.MtrlPriceListOperationCompleted, userState);
        }

        private void OnMtrlPriceListOperationCompleted(object arg)
        {
            if ((this.MtrlPriceListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MtrlPriceListCompleted(this, new MtrlPriceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string PushPurchasePlan(string arg0)
        {
            object[] results = this.Invoke("PushPurchasePlan", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void PushPurchasePlanAsync(string arg0)
        {
            this.PushPurchasePlanAsync(arg0, null);
        }

        /// <remarks/>
        public void PushPurchasePlanAsync(string arg0, object userState)
        {
            if ((this.PushPurchasePlanOperationCompleted == null))
            {
                this.PushPurchasePlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushPurchasePlanOperationCompleted);
            }
            this.InvokeAsync("PushPurchasePlan", new object[] {
                        arg0}, this.PushPurchasePlanOperationCompleted, userState);
        }

        private void OnPushPurchasePlanOperationCompleted(object arg)
        {
            if ((this.PushPurchasePlanCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushPurchasePlanCompleted(this, new PushPurchasePlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SyncMtrlImportInfoForGys(string arg0)
        {
            object[] results = this.Invoke("SyncMtrlImportInfoForGys", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SyncMtrlImportInfoForGysAsync(string arg0)
        {
            this.SyncMtrlImportInfoForGysAsync(arg0, null);
        }

        /// <remarks/>
        public void SyncMtrlImportInfoForGysAsync(string arg0, object userState)
        {
            if ((this.SyncMtrlImportInfoForGysOperationCompleted == null))
            {
                this.SyncMtrlImportInfoForGysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncMtrlImportInfoForGysOperationCompleted);
            }
            this.InvokeAsync("SyncMtrlImportInfoForGys", new object[] {
                        arg0}, this.SyncMtrlImportInfoForGysOperationCompleted, userState);
        }

        private void OnSyncMtrlImportInfoForGysOperationCompleted(object arg)
        {
            if ((this.SyncMtrlImportInfoForGysCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncMtrlImportInfoForGysCompleted(this, new SyncMtrlImportInfoForGysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SendOrderToGY(string arg0)
        {
            object[] results = this.Invoke("SendOrderToGY", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SendOrderToGYAsync(string arg0)
        {
            this.SendOrderToGYAsync(arg0, null);
        }

        /// <remarks/>
        public void SendOrderToGYAsync(string arg0, object userState)
        {
            if ((this.SendOrderToGYOperationCompleted == null))
            {
                this.SendOrderToGYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrderToGYOperationCompleted);
            }
            this.InvokeAsync("SendOrderToGY", new object[] {
                        arg0}, this.SendOrderToGYOperationCompleted, userState);
        }

        private void OnSendOrderToGYOperationCompleted(object arg)
        {
            if ((this.SendOrderToGYCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrderToGYCompleted(this, new SendOrderToGYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string HisExpCharging(string arg0)
        {
            object[] results = this.Invoke("HisExpCharging", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void HisExpChargingAsync(string arg0)
        {
            this.HisExpChargingAsync(arg0, null);
        }

        /// <remarks/>
        public void HisExpChargingAsync(string arg0, object userState)
        {
            if ((this.HisExpChargingOperationCompleted == null))
            {
                this.HisExpChargingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHisExpChargingOperationCompleted);
            }
            this.InvokeAsync("HisExpCharging", new object[] {
                        arg0}, this.HisExpChargingOperationCompleted, userState);
        }

        private void OnHisExpChargingOperationCompleted(object arg)
        {
            if ((this.HisExpChargingCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HisExpChargingCompleted(this, new HisExpChargingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SyncMtrlPriceToSpd(string arg0)
        {
            object[] results = this.Invoke("SyncMtrlPriceToSpd", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SyncMtrlPriceToSpdAsync(string arg0)
        {
            this.SyncMtrlPriceToSpdAsync(arg0, null);
        }

        /// <remarks/>
        public void SyncMtrlPriceToSpdAsync(string arg0, object userState)
        {
            if ((this.SyncMtrlPriceToSpdOperationCompleted == null))
            {
                this.SyncMtrlPriceToSpdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncMtrlPriceToSpdOperationCompleted);
            }
            this.InvokeAsync("SyncMtrlPriceToSpd", new object[] {
                        arg0}, this.SyncMtrlPriceToSpdOperationCompleted, userState);
        }

        private void OnSyncMtrlPriceToSpdOperationCompleted(object arg)
        {
            if ((this.SyncMtrlPriceToSpdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncMtrlPriceToSpdCompleted(this, new SyncMtrlPriceToSpdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string ExpRegConfirm(string arg0)
        {
            object[] results = this.Invoke("ExpRegConfirm", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ExpRegConfirmAsync(string arg0)
        {
            this.ExpRegConfirmAsync(arg0, null);
        }

        /// <remarks/>
        public void ExpRegConfirmAsync(string arg0, object userState)
        {
            if ((this.ExpRegConfirmOperationCompleted == null))
            {
                this.ExpRegConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExpRegConfirmOperationCompleted);
            }
            this.InvokeAsync("ExpRegConfirm", new object[] {
                        arg0}, this.ExpRegConfirmOperationCompleted, userState);
        }

        private void OnExpRegConfirmOperationCompleted(object arg)
        {
            if ((this.ExpRegConfirmCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExpRegConfirmCompleted(this, new ExpRegConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetStockInfo(string arg0)
        {
            object[] results = this.Invoke("GetStockInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetStockInfoAsync(string arg0)
        {
            this.GetStockInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void GetStockInfoAsync(string arg0, object userState)
        {
            if ((this.GetStockInfoOperationCompleted == null))
            {
                this.GetStockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockInfoOperationCompleted);
            }
            this.InvokeAsync("GetStockInfo", new object[] {
                        arg0}, this.GetStockInfoOperationCompleted, userState);
        }

        private void OnGetStockInfoOperationCompleted(object arg)
        {
            if ((this.GetStockInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockInfoCompleted(this, new GetStockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string MtrlExpHisChargeProcedure(string arg0)
        {
            object[] results = this.Invoke("MtrlExpHisChargeProcedure", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MtrlExpHisChargeProcedureAsync(string arg0)
        {
            this.MtrlExpHisChargeProcedureAsync(arg0, null);
        }

        /// <remarks/>
        public void MtrlExpHisChargeProcedureAsync(string arg0, object userState)
        {
            if ((this.MtrlExpHisChargeProcedureOperationCompleted == null))
            {
                this.MtrlExpHisChargeProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMtrlExpHisChargeProcedureOperationCompleted);
            }
            this.InvokeAsync("MtrlExpHisChargeProcedure", new object[] {
                        arg0}, this.MtrlExpHisChargeProcedureOperationCompleted, userState);
        }

        private void OnMtrlExpHisChargeProcedureOperationCompleted(object arg)
        {
            if ((this.MtrlExpHisChargeProcedureCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MtrlExpHisChargeProcedureCompleted(this, new MtrlExpHisChargeProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string ExtractHisSurgeryInfo(string arg0)
        {
            object[] results = this.Invoke("ExtractHisSurgeryInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ExtractHisSurgeryInfoAsync(string arg0)
        {
            this.ExtractHisSurgeryInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void ExtractHisSurgeryInfoAsync(string arg0, object userState)
        {
            if ((this.ExtractHisSurgeryInfoOperationCompleted == null))
            {
                this.ExtractHisSurgeryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtractHisSurgeryInfoOperationCompleted);
            }
            this.InvokeAsync("ExtractHisSurgeryInfo", new object[] {
                        arg0}, this.ExtractHisSurgeryInfoOperationCompleted, userState);
        }

        private void OnExtractHisSurgeryInfoOperationCompleted(object arg)
        {
            if ((this.ExtractHisSurgeryInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtractHisSurgeryInfoCompleted(this, new ExtractHisSurgeryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string doAcceptImportAndExportInfo(string arg0)
        {
            object[] results = this.Invoke("doAcceptImportAndExportInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void doAcceptImportAndExportInfoAsync(string arg0)
        {
            this.doAcceptImportAndExportInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void doAcceptImportAndExportInfoAsync(string arg0, object userState)
        {
            if ((this.doAcceptImportAndExportInfoOperationCompleted == null))
            {
                this.doAcceptImportAndExportInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAcceptImportAndExportInfoOperationCompleted);
            }
            this.InvokeAsync("doAcceptImportAndExportInfo", new object[] {
                        arg0}, this.doAcceptImportAndExportInfoOperationCompleted, userState);
        }

        private void OndoAcceptImportAndExportInfoOperationCompleted(object arg)
        {
            if ((this.doAcceptImportAndExportInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doAcceptImportAndExportInfoCompleted(this, new doAcceptImportAndExportInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getExpInfo(string arg0)
        {
            object[] results = this.Invoke("getExpInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getExpInfoAsync(string arg0)
        {
            this.getExpInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void getExpInfoAsync(string arg0, object userState)
        {
            if ((this.getExpInfoOperationCompleted == null))
            {
                this.getExpInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExpInfoOperationCompleted);
            }
            this.InvokeAsync("getExpInfo", new object[] {
                        arg0}, this.getExpInfoOperationCompleted, userState);
        }

        private void OngetExpInfoOperationCompleted(object arg)
        {
            if ((this.getExpInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExpInfoCompleted(this, new getExpInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetHisDeptInfo(string arg0)
        {
            object[] results = this.Invoke("GetHisDeptInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetHisDeptInfoAsync(string arg0)
        {
            this.GetHisDeptInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void GetHisDeptInfoAsync(string arg0, object userState)
        {
            if ((this.GetHisDeptInfoOperationCompleted == null))
            {
                this.GetHisDeptInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHisDeptInfoOperationCompleted);
            }
            this.InvokeAsync("GetHisDeptInfo", new object[] {
                        arg0}, this.GetHisDeptInfoOperationCompleted, userState);
        }

        private void OnGetHisDeptInfoOperationCompleted(object arg)
        {
            if ((this.GetHisDeptInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHisDeptInfoCompleted(this, new GetHisDeptInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SyncMtrlStockToHis(string arg0)
        {
            object[] results = this.Invoke("SyncMtrlStockToHis", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SyncMtrlStockToHisAsync(string arg0)
        {
            this.SyncMtrlStockToHisAsync(arg0, null);
        }

        /// <remarks/>
        public void SyncMtrlStockToHisAsync(string arg0, object userState)
        {
            if ((this.SyncMtrlStockToHisOperationCompleted == null))
            {
                this.SyncMtrlStockToHisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncMtrlStockToHisOperationCompleted);
            }
            this.InvokeAsync("SyncMtrlStockToHis", new object[] {
                        arg0}, this.SyncMtrlStockToHisOperationCompleted, userState);
        }

        private void OnSyncMtrlStockToHisOperationCompleted(object arg)
        {
            if ((this.SyncMtrlStockToHisCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncMtrlStockToHisCompleted(this, new SyncMtrlStockToHisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string SyncMtrlImportInfo(string arg0)
        {
            object[] results = this.Invoke("SyncMtrlImportInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SyncMtrlImportInfoAsync(string arg0)
        {
            this.SyncMtrlImportInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void SyncMtrlImportInfoAsync(string arg0, object userState)
        {
            if ((this.SyncMtrlImportInfoOperationCompleted == null))
            {
                this.SyncMtrlImportInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncMtrlImportInfoOperationCompleted);
            }
            this.InvokeAsync("SyncMtrlImportInfo", new object[] {
                        arg0}, this.SyncMtrlImportInfoOperationCompleted, userState);
        }

        private void OnSyncMtrlImportInfoOperationCompleted(object arg)
        {
            if ((this.SyncMtrlImportInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncMtrlImportInfoCompleted(this, new SyncMtrlImportInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string MtrlDeptRefund(string arg0)
        {
            object[] results = this.Invoke("MtrlDeptRefund", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MtrlDeptRefundAsync(string arg0)
        {
            this.MtrlDeptRefundAsync(arg0, null);
        }

        /// <remarks/>
        public void MtrlDeptRefundAsync(string arg0, object userState)
        {
            if ((this.MtrlDeptRefundOperationCompleted == null))
            {
                this.MtrlDeptRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMtrlDeptRefundOperationCompleted);
            }
            this.InvokeAsync("MtrlDeptRefund", new object[] {
                        arg0}, this.MtrlDeptRefundOperationCompleted, userState);
        }

        private void OnMtrlDeptRefundOperationCompleted(object arg)
        {
            if ((this.MtrlDeptRefundCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MtrlDeptRefundCompleted(this, new MtrlDeptRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string ChageMtrlExpFee(string arg0)
        {
            object[] results = this.Invoke("ChageMtrlExpFee", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ChageMtrlExpFeeAsync(string arg0)
        {
            this.ChageMtrlExpFeeAsync(arg0, null);
        }

        /// <remarks/>
        public void ChageMtrlExpFeeAsync(string arg0, object userState)
        {
            if ((this.ChageMtrlExpFeeOperationCompleted == null))
            {
                this.ChageMtrlExpFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChageMtrlExpFeeOperationCompleted);
            }
            this.InvokeAsync("ChageMtrlExpFee", new object[] {
                        arg0}, this.ChageMtrlExpFeeOperationCompleted, userState);
        }

        private void OnChageMtrlExpFeeOperationCompleted(object arg)
        {
            if ((this.ChageMtrlExpFeeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChageMtrlExpFeeCompleted(this, new ChageMtrlExpFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string InitializationOfPriceListOperation(string arg0)
        {
            object[] results = this.Invoke("InitializationOfPriceListOperation", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void InitializationOfPriceListOperationAsync(string arg0)
        {
            this.InitializationOfPriceListOperationAsync(arg0, null);
        }

        /// <remarks/>
        public void InitializationOfPriceListOperationAsync(string arg0, object userState)
        {
            if ((this.InitializationOfPriceListOperationOperationCompleted == null))
            {
                this.InitializationOfPriceListOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializationOfPriceListOperationOperationCompleted);
            }
            this.InvokeAsync("InitializationOfPriceListOperation", new object[] {
                        arg0}, this.InitializationOfPriceListOperationOperationCompleted, userState);
        }

        private void OnInitializationOfPriceListOperationOperationCompleted(object arg)
        {
            if ((this.InitializationOfPriceListOperationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializationOfPriceListOperationCompleted(this, new InitializationOfPriceListOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getExportInfo()
        {
            object[] results = this.Invoke("getExportInfo", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getExportInfoAsync()
        {
            this.getExportInfoAsync(null);
        }

        /// <remarks/>
        public void getExportInfoAsync(object userState)
        {
            if ((this.getExportInfoOperationCompleted == null))
            {
                this.getExportInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExportInfoOperationCompleted);
            }
            this.InvokeAsync("getExportInfo", new object[0], this.getExportInfoOperationCompleted, userState);
        }

        private void OngetExportInfoOperationCompleted(object arg)
        {
            if ((this.getExportInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExportInfoCompleted(this, new getExportInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string HisExpConfirm(string arg0)
        {
            object[] results = this.Invoke("HisExpConfirm", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void HisExpConfirmAsync(string arg0)
        {
            this.HisExpConfirmAsync(arg0, null);
        }

        /// <remarks/>
        public void HisExpConfirmAsync(string arg0, object userState)
        {
            if ((this.HisExpConfirmOperationCompleted == null))
            {
                this.HisExpConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHisExpConfirmOperationCompleted);
            }
            this.InvokeAsync("HisExpConfirm", new object[] {
                        arg0}, this.HisExpConfirmOperationCompleted, userState);
        }

        private void OnHisExpConfirmOperationCompleted(object arg)
        {
            if ((this.HisExpConfirmCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HisExpConfirmCompleted(this, new HisExpConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string DoUpdateStatus(string arg0)
        {
            object[] results = this.Invoke("DoUpdateStatus", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void DoUpdateStatusAsync(string arg0)
        {
            this.DoUpdateStatusAsync(arg0, null);
        }

        /// <remarks/>
        public void DoUpdateStatusAsync(string arg0, object userState)
        {
            if ((this.DoUpdateStatusOperationCompleted == null))
            {
                this.DoUpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("DoUpdateStatus", new object[] {
                        arg0}, this.DoUpdateStatusOperationCompleted, userState);
        }

        private void OnDoUpdateStatusOperationCompleted(object arg)
        {
            if ((this.DoUpdateStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoUpdateStatusCompleted(this, new DoUpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string FlusheMtrlExpFee(string arg0)
        {
            object[] results = this.Invoke("FlusheMtrlExpFee", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void FlusheMtrlExpFeeAsync(string arg0)
        {
            this.FlusheMtrlExpFeeAsync(arg0, null);
        }

        /// <remarks/>
        public void FlusheMtrlExpFeeAsync(string arg0, object userState)
        {
            if ((this.FlusheMtrlExpFeeOperationCompleted == null))
            {
                this.FlusheMtrlExpFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFlusheMtrlExpFeeOperationCompleted);
            }
            this.InvokeAsync("FlusheMtrlExpFee", new object[] {
                        arg0}, this.FlusheMtrlExpFeeOperationCompleted, userState);
        }

        private void OnFlusheMtrlExpFeeOperationCompleted(object arg)
        {
            if ((this.FlusheMtrlExpFeeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FlusheMtrlExpFeeCompleted(this, new FlusheMtrlExpFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string MtrlExpVerification(string arg0)
        {
            object[] results = this.Invoke("MtrlExpVerification", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MtrlExpVerificationAsync(string arg0)
        {
            this.MtrlExpVerificationAsync(arg0, null);
        }

        /// <remarks/>
        public void MtrlExpVerificationAsync(string arg0, object userState)
        {
            if ((this.MtrlExpVerificationOperationCompleted == null))
            {
                this.MtrlExpVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMtrlExpVerificationOperationCompleted);
            }
            this.InvokeAsync("MtrlExpVerification", new object[] {
                        arg0}, this.MtrlExpVerificationOperationCompleted, userState);
        }

        private void OnMtrlExpVerificationOperationCompleted(object arg)
        {
            if ((this.MtrlExpVerificationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MtrlExpVerificationCompleted(this, new MtrlExpVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string syncReturnToSupplier(string arg0)
        {
            object[] results = this.Invoke("syncReturnToSupplier", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void syncReturnToSupplierAsync(string arg0)
        {
            this.syncReturnToSupplierAsync(arg0, null);
        }

        /// <remarks/>
        public void syncReturnToSupplierAsync(string arg0, object userState)
        {
            if ((this.syncReturnToSupplierOperationCompleted == null))
            {
                this.syncReturnToSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsyncReturnToSupplierOperationCompleted);
            }
            this.InvokeAsync("syncReturnToSupplier", new object[] {
                        arg0}, this.syncReturnToSupplierOperationCompleted, userState);
        }

        private void OnsyncReturnToSupplierOperationCompleted(object arg)
        {
            if ((this.syncReturnToSupplierCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.syncReturnToSupplierCompleted(this, new syncReturnToSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string UniversalInterface(string arg0)
        {
            object[] results = this.Invoke("UniversalInterface", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void UniversalInterfaceAsync(string arg0)
        {
            this.UniversalInterfaceAsync(arg0, null);
        }

        /// <remarks/>
        public void UniversalInterfaceAsync(string arg0, object userState)
        {
            if ((this.UniversalInterfaceOperationCompleted == null))
            {
                this.UniversalInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUniversalInterfaceOperationCompleted);
            }
            this.InvokeAsync("UniversalInterface", new object[] {
                        arg0}, this.UniversalInterfaceOperationCompleted, userState);
        }

        private void OnUniversalInterfaceOperationCompleted(object arg)
        {
            if ((this.UniversalInterfaceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UniversalInterfaceCompleted(this, new UniversalInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string UpdateDeliveryStateToNP(string arg0)
        {
            object[] results = this.Invoke("UpdateDeliveryStateToNP", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void UpdateDeliveryStateToNPAsync(string arg0)
        {
            this.UpdateDeliveryStateToNPAsync(arg0, null);
        }

        /// <remarks/>
        public void UpdateDeliveryStateToNPAsync(string arg0, object userState)
        {
            if ((this.UpdateDeliveryStateToNPOperationCompleted == null))
            {
                this.UpdateDeliveryStateToNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeliveryStateToNPOperationCompleted);
            }
            this.InvokeAsync("UpdateDeliveryStateToNP", new object[] {
                        arg0}, this.UpdateDeliveryStateToNPOperationCompleted, userState);
        }

        private void OnUpdateDeliveryStateToNPOperationCompleted(object arg)
        {
            if ((this.UpdateDeliveryStateToNPCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDeliveryStateToNPCompleted(this, new UpdateDeliveryStateToNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string MtrlExport(string arg0)
        {
            object[] results = this.Invoke("MtrlExport", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MtrlExportAsync(string arg0)
        {
            this.MtrlExportAsync(arg0, null);
        }

        /// <remarks/>
        public void MtrlExportAsync(string arg0, object userState)
        {
            if ((this.MtrlExportOperationCompleted == null))
            {
                this.MtrlExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMtrlExportOperationCompleted);
            }
            this.InvokeAsync("MtrlExport", new object[] {
                        arg0}, this.MtrlExportOperationCompleted, userState);
        }

        private void OnMtrlExportOperationCompleted(object arg)
        {
            if ((this.MtrlExportCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MtrlExportCompleted(this, new MtrlExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://services.passages.feiyi.com.cn/", ResponseNamespace = "http://services.passages.feiyi.com.cn/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string doAddExportInfo(string arg0)
        {
            object[] results = this.Invoke("doAddExportInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void doAddExportInfoAsync(string arg0)
        {
            this.doAddExportInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void doAddExportInfoAsync(string arg0, object userState)
        {
            if ((this.doAddExportInfoOperationCompleted == null))
            {
                this.doAddExportInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddExportInfoOperationCompleted);
            }
            this.InvokeAsync("doAddExportInfo", new object[] {
                        arg0}, this.doAddExportInfoOperationCompleted, userState);
        }

        private void OndoAddExportInfoOperationCompleted(object arg)
        {
            if ((this.doAddExportInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doAddExportInfoCompleted(this, new doAddExportInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void esbEntranceCompletedEventHandler(object sender, esbEntranceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class esbEntranceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal esbEntranceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getHisPatientInfoCompletedEventHandler(object sender, getHisPatientInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHisPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getHisPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RefundMtrlExpFeeCompletedEventHandler(object sender, RefundMtrlExpFeeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundMtrlExpFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RefundMtrlExpFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SyncMtrlPriceToHisCompletedEventHandler(object sender, SyncMtrlPriceToHisCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncMtrlPriceToHisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SyncMtrlPriceToHisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getKindlyqualificationInfoCompletedEventHandler(object sender, getKindlyqualificationInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKindlyqualificationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getKindlyqualificationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChageMtrlExpFeeListCompletedEventHandler(object sender, ChageMtrlExpFeeListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChageMtrlExpFeeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ChageMtrlExpFeeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPriceListFromHisCompletedEventHandler(object sender, GetPriceListFromHisCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceListFromHisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPriceListFromHisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doAddMtrlDictCompletedEventHandler(object sender, doAddMtrlDictCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doAddMtrlDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal doAddMtrlDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PriceListVSCompletedEventHandler(object sender, PriceListVSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PriceListVSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PriceListVSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doAddImportInfoCompletedEventHandler(object sender, doAddImportInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doAddImportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal doAddImportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MtrlPriceListCompletedEventHandler(object sender, MtrlPriceListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MtrlPriceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MtrlPriceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PushPurchasePlanCompletedEventHandler(object sender, PushPurchasePlanCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushPurchasePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PushPurchasePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SyncMtrlImportInfoForGysCompletedEventHandler(object sender, SyncMtrlImportInfoForGysCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncMtrlImportInfoForGysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SyncMtrlImportInfoForGysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendOrderToGYCompletedEventHandler(object sender, SendOrderToGYCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOrderToGYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendOrderToGYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HisExpChargingCompletedEventHandler(object sender, HisExpChargingCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HisExpChargingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal HisExpChargingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SyncMtrlPriceToSpdCompletedEventHandler(object sender, SyncMtrlPriceToSpdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncMtrlPriceToSpdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SyncMtrlPriceToSpdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExpRegConfirmCompletedEventHandler(object sender, ExpRegConfirmCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExpRegConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExpRegConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStockInfoCompletedEventHandler(object sender, GetStockInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetStockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MtrlExpHisChargeProcedureCompletedEventHandler(object sender, MtrlExpHisChargeProcedureCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MtrlExpHisChargeProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MtrlExpHisChargeProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExtractHisSurgeryInfoCompletedEventHandler(object sender, ExtractHisSurgeryInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtractHisSurgeryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExtractHisSurgeryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doAcceptImportAndExportInfoCompletedEventHandler(object sender, doAcceptImportAndExportInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doAcceptImportAndExportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal doAcceptImportAndExportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getExpInfoCompletedEventHandler(object sender, getExpInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExpInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getExpInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetHisDeptInfoCompletedEventHandler(object sender, GetHisDeptInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHisDeptInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetHisDeptInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SyncMtrlStockToHisCompletedEventHandler(object sender, SyncMtrlStockToHisCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncMtrlStockToHisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SyncMtrlStockToHisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SyncMtrlImportInfoCompletedEventHandler(object sender, SyncMtrlImportInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncMtrlImportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SyncMtrlImportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MtrlDeptRefundCompletedEventHandler(object sender, MtrlDeptRefundCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MtrlDeptRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MtrlDeptRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChageMtrlExpFeeCompletedEventHandler(object sender, ChageMtrlExpFeeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChageMtrlExpFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ChageMtrlExpFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InitializationOfPriceListOperationCompletedEventHandler(object sender, InitializationOfPriceListOperationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializationOfPriceListOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InitializationOfPriceListOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getExportInfoCompletedEventHandler(object sender, getExportInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getExportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HisExpConfirmCompletedEventHandler(object sender, HisExpConfirmCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HisExpConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal HisExpConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DoUpdateStatusCompletedEventHandler(object sender, DoUpdateStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoUpdateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DoUpdateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FlusheMtrlExpFeeCompletedEventHandler(object sender, FlusheMtrlExpFeeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlusheMtrlExpFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FlusheMtrlExpFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MtrlExpVerificationCompletedEventHandler(object sender, MtrlExpVerificationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MtrlExpVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MtrlExpVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void syncReturnToSupplierCompletedEventHandler(object sender, syncReturnToSupplierCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class syncReturnToSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal syncReturnToSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UniversalInterfaceCompletedEventHandler(object sender, UniversalInterfaceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UniversalInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UniversalInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateDeliveryStateToNPCompletedEventHandler(object sender, UpdateDeliveryStateToNPCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDeliveryStateToNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateDeliveryStateToNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MtrlExportCompletedEventHandler(object sender, MtrlExportCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MtrlExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MtrlExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void doAddExportInfoCompletedEventHandler(object sender, doAddExportInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doAddExportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal doAddExportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591